# title: "**Generating moment arm plot from palaeognath SIMM model**"
# project for: "thesis!"
# author: "Wani2Y"
# first created: "12/11/2022"
# last modified: "23/03/2023"

# load the necessary libraries
library(tidyverse)
library(reshape2)
library(data.table)
library(ggplot2)
library(ggpubr)
library(gridExtra)
library(stringi)

#read in the moment arm csv files
filenames <- tools::file_path_sans_ext(
  list.files(path ="./palaeognath/",
             pattern ="*.csv")) 

#read in oROM file
oROM <- read.csv("oROM_bird.csv", header = TRUE)

big_table <- list()
for(i in filenames){
  filepath <- file.path("./palaeognath/",paste(i,".csv",sep =""))
  big_table[[i]] <- read.csv(filepath)
}

# seprate big tables into lists of muscles
# LC
LC_list <- list()
for(i in 1: length(big_table)){
  if (str_detect(names(big_table[i]), "MLC_")){
    LC_list = append(LC_list, big_table[i])
  }
}

# IE
IE_list <- list()
for(i in 1: length(big_table)){
  if (str_detect(names(big_table[i]), "MIE_")){
    IE_list = append(IE_list, big_table[i])
  }
}

# APC
APC_list <- list()
for(i in 1: length(big_table)){
  if (str_detect(names(big_table[i]), "MA_")){
    APC_list = append(APC_list, big_table[i])
  }
}

# II
II_list <- list()
for(i in 1: length(big_table)){
  if (str_detect(names(big_table[i]), "MII_")){
    II_list = append(II_list, big_table[i])
  }
}

# COT
COT_list <- list()
for(i in 1: length(big_table)){
  if (str_detect(names(big_table[i]), "COT_")){
    COT_list = append(COT_list, big_table[i])
  }
}

# SC
SC_list <- list()
for(i in 1: length(big_table)){
  if (str_detect(names(big_table[i]), "MSUB_")){
    SC_list = append(SC_list, big_table[i])
  }
}

IV_names <- c(
  "IV_19", "IV_20", "IV_21", "IV_22", "IV_23", "IV_24", "IV_25"
)

Rib_names <- c(
  "C21", "C22", "C23", "C24", "C25",
  "IR21", "IR22", "IR23", "IR24", "IR25"
)

# get max moment arm values for bar graphs
#LC
LC_data <- data.frame(
  jnt = c("C21", "C22", "C23", "C24", "C25"),
  max_u1_x = c(LC_list[[1]][which.max(abs(LC_list[[1]][[2]])), which(colnames(LC_list[[1]]) == "um_u1_axial")],
                 LC_list[[2]][which.max(abs(LC_list[[2]][[2]])), which(colnames(LC_list[[2]]) == "um_u1_axial")],
                 LC_list[[3]][which.max(abs(LC_list[[3]][[2]])), which(colnames(LC_list[[3]]) == "um_u1_axial")],
                 LC_list[[4]][which.max(abs(LC_list[[4]][[2]])), which(colnames(LC_list[[4]]) == "um_u1_axial")],
                 LC_list[[5]][which.max(abs(LC_list[[5]][[2]])), which(colnames(LC_list[[5]]) == "um_u1_axial")]),
  
  max_u2_x = c(LC_list[[1]][which.max(abs(LC_list[[1]][[2]])), which(colnames(LC_list[[1]]) == "um_u2_axial")],
               LC_list[[2]][which.max(abs(LC_list[[2]][[2]])), which(colnames(LC_list[[2]]) == "um_u2_axial")],
               LC_list[[3]][which.max(abs(LC_list[[3]][[2]])), which(colnames(LC_list[[3]]) == "um_u2_axial")],
               LC_list[[4]][which.max(abs(LC_list[[4]][[2]])), which(colnames(LC_list[[4]]) == "um_u2_axial")],
               LC_list[[5]][which.max(abs(LC_list[[5]][[2]])), which(colnames(LC_list[[5]]) == "um_u2_axial")]),
  
  max_u1_y = c(LC_list[[1]][which.max(abs(LC_list[[1]][[3]])), which(colnames(LC_list[[1]]) == "um_u1_abd_add")],
               LC_list[[2]][which.max(abs(LC_list[[2]][[3]])), which(colnames(LC_list[[2]]) == "um_u1_abd_add")],
               LC_list[[3]][which.max(abs(LC_list[[3]][[3]])), which(colnames(LC_list[[3]]) == "um_u1_abd_add")],
               LC_list[[4]][which.max(abs(LC_list[[4]][[3]])), which(colnames(LC_list[[4]]) == "um_u1_abd_add")],
               LC_list[[5]][which.max(abs(LC_list[[5]][[3]])), which(colnames(LC_list[[5]]) == "um_u1_abd_add")]),
  
  max_u2_y = c(LC_list[[1]][which.max(abs(LC_list[[1]][[3]])), which(colnames(LC_list[[1]]) == "um_u2_abd_add")],
               LC_list[[2]][which.max(abs(LC_list[[2]][[3]])), which(colnames(LC_list[[2]]) == "um_u2_abd_add")],
               LC_list[[3]][which.max(abs(LC_list[[3]][[3]])), which(colnames(LC_list[[3]]) == "um_u2_abd_add")],
               LC_list[[4]][which.max(abs(LC_list[[4]][[3]])), which(colnames(LC_list[[4]]) == "um_u2_abd_add")],
               LC_list[[5]][which.max(abs(LC_list[[5]][[3]])), which(colnames(LC_list[[5]]) == "um_u2_abd_add")]),
  
  max_u1_z = c(LC_list[[1]][which.max(abs(LC_list[[1]][[4]])), which(colnames(LC_list[[1]]) == "um_u1_pro_re")],
               LC_list[[2]][which.max(abs(LC_list[[2]][[4]])), which(colnames(LC_list[[2]]) == "um_u1_pro_re")],
               LC_list[[3]][which.max(abs(LC_list[[3]][[4]])), which(colnames(LC_list[[3]]) == "um_u1_pro_re")],
               LC_list[[4]][which.max(abs(LC_list[[4]][[4]])), which(colnames(LC_list[[4]]) == "um_u1_pro_re")],
               LC_list[[5]][which.max(abs(LC_list[[5]][[4]])), which(colnames(LC_list[[5]]) == "um_u1_pro_re")]),
  
  max_u2_z = c(LC_list[[1]][which.max(abs(LC_list[[1]][[4]])), which(colnames(LC_list[[1]]) == "um_u2_pro_re")],
               LC_list[[2]][which.max(abs(LC_list[[2]][[4]])), which(colnames(LC_list[[2]]) == "um_u2_pro_re")],
               LC_list[[3]][which.max(abs(LC_list[[3]][[4]])), which(colnames(LC_list[[3]]) == "um_u2_pro_re")],
               LC_list[[4]][which.max(abs(LC_list[[4]][[4]])), which(colnames(LC_list[[4]]) == "um_u2_pro_re")],
               LC_list[[5]][which.max(abs(LC_list[[5]][[4]])), which(colnames(LC_list[[5]]) == "um_u2_pro_re")]),
 
  real_u1_x = c(LC_list[[6]][which.max(abs(LC_list[[6]][[2]])), which(colnames(LC_list[[6]]) == "um_u1_axial")],
               LC_list[[7]][which.max(abs(LC_list[[7]][[2]])), which(colnames(LC_list[[7]]) == "um_u1_axial")],
               LC_list[[8]][which.max(abs(LC_list[[8]][[2]])), which(colnames(LC_list[[8]]) == "um_u1_axial")],
               LC_list[[9]][which.max(abs(LC_list[[9]][[2]])), which(colnames(LC_list[[9]]) == "um_u1_axial")],
               LC_list[[10]][which.max(abs(LC_list[[10]][[2]])), which(colnames(LC_list[[10]]) == "um_u1_axial")]),
  
  real_u2_x = c(LC_list[[6]][which.max(abs(LC_list[[6]][[2]])), which(colnames(LC_list[[6]]) == "um_u2_axial")],
               LC_list[[7]][which.max(abs(LC_list[[7]][[2]])), which(colnames(LC_list[[7]]) == "um_u2_axial")],
               LC_list[[8]][which.max(abs(LC_list[[8]][[2]])), which(colnames(LC_list[[8]]) == "um_u2_axial")],
               LC_list[[9]][which.max(abs(LC_list[[9]][[2]])), which(colnames(LC_list[[9]]) == "um_u2_axial")],
               LC_list[[10]][which.max(abs(LC_list[[10]][[2]])), which(colnames(LC_list[[10]]) == "um_u2_axial")]),
  
  real_u1_y = c(LC_list[[6]][which.max(abs(LC_list[[6]][[3]])), which(colnames(LC_list[[6]]) == "um_u1_abd_add")],
               LC_list[[7]][which.max(abs(LC_list[[7]][[3]])), which(colnames(LC_list[[7]]) == "um_u1_abd_add")],
               LC_list[[8]][which.max(abs(LC_list[[8]][[3]])), which(colnames(LC_list[[8]]) == "um_u1_abd_add")],
               LC_list[[9]][which.max(abs(LC_list[[9]][[3]])), which(colnames(LC_list[[9]]) == "um_u1_abd_add")],
               LC_list[[10]][which.max(abs(LC_list[[10]][[3]])), which(colnames(LC_list[[10]]) == "um_u1_abd_add")]),
  
  real_u2_y = c(LC_list[[6]][which.max(abs(LC_list[[6]][[3]])), which(colnames(LC_list[[6]]) == "um_u2_abd_add")],
               LC_list[[7]][which.max(abs(LC_list[[7]][[3]])), which(colnames(LC_list[[7]]) == "um_u2_abd_add")],
               LC_list[[8]][which.max(abs(LC_list[[8]][[3]])), which(colnames(LC_list[[8]]) == "um_u2_abd_add")],
               LC_list[[9]][which.max(abs(LC_list[[9]][[3]])), which(colnames(LC_list[[9]]) == "um_u2_abd_add")],
               LC_list[[10]][which.max(abs(LC_list[[10]][[3]])), which(colnames(LC_list[[10]]) == "um_u2_abd_add")]),
  
  real_u1_z = c(LC_list[[6]][which.max(abs(LC_list[[6]][[4]])), which(colnames(LC_list[[6]]) == "um_u1_pro_re")],
               LC_list[[7]][which.max(abs(LC_list[[7]][[4]])), which(colnames(LC_list[[7]]) == "um_u1_pro_re")],
               LC_list[[8]][which.max(abs(LC_list[[8]][[4]])), which(colnames(LC_list[[8]]) == "um_u1_pro_re")],
               LC_list[[9]][which.max(abs(LC_list[[9]][[4]])), which(colnames(LC_list[[9]]) == "um_u1_pro_re")],
               LC_list[[10]][which.max(abs(LC_list[[10]][[4]])), which(colnames(LC_list[[10]]) == "um_u1_pro_re")]),
  
  real_u2_z = c(LC_list[[6]][which.max(abs(LC_list[[6]][[4]])), which(colnames(LC_list[[6]]) == "um_u2_pro_re")],
               LC_list[[7]][which.max(abs(LC_list[[7]][[4]])), which(colnames(LC_list[[7]]) == "um_u2_pro_re")],
               LC_list[[8]][which.max(abs(LC_list[[8]][[4]])), which(colnames(LC_list[[8]]) == "um_u2_pro_re")],
               LC_list[[9]][which.max(abs(LC_list[[9]][[4]])), which(colnames(LC_list[[9]]) == "um_u2_pro_re")],
               LC_list[[10]][which.max(abs(LC_list[[10]][[4]])), which(colnames(LC_list[[10]]) == "um_u2_pro_re")]))

LC_bar <- reshape2::melt(LC_data, id.var = "jnt")

LC_bar <- LC_bar %>%
  mutate(oROM = if_else(str_detect(LC_bar[[2]], "max_"), "max", "real")) %>%
  mutate(xyz = if_else(str_detect(LC_bar[[2]], "_x"), "axial_rotation", 
                        if_else(str_detect(LC_bar[[2]], "_y"), "abduct_adduct",
                                "pro_retract"))) %>%
  mutate(unit = if_else(str_detect(LC_bar[[2]], "_u1_"), "unit 1", "unit 2"))

#IE
IE_data <- data.frame(
  jnt = c("C21", "C22", "C23", "C24", "C25"),
  max_u1_x = c(IE_list[[3]][which.max(abs(IE_list[[3]][[2]])), which(colnames(IE_list[[3]]) == "um_u1_axial")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[2]])), which(colnames(IE_list[[4]]) == "um_u1_axial")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u1_axial")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[2]])), which(colnames(IE_list[[6]]) == "um_u1_axial")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[2]])), which(colnames(IE_list[[7]]) == "um_u1_axial")]),
  
  max_u2_x = c(IE_list[[3]][which.max(abs(IE_list[[3]][[2]])), which(colnames(IE_list[[3]]) == "um_u2_axial")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[2]])), which(colnames(IE_list[[4]]) == "um_u2_axial")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u2_axial")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[2]])), which(colnames(IE_list[[6]]) == "um_u2_axial")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[2]])), which(colnames(IE_list[[7]]) == "um_u2_axial")]),
  
  max_u3_x = c(IE_list[[3]][which.max(abs(IE_list[[3]][[2]])), which(colnames(IE_list[[3]]) == "um_u3_axial")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[2]])), which(colnames(IE_list[[4]]) == "um_u3_axial")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u3_axial")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[2]])), which(colnames(IE_list[[6]]) == "um_u3_axial")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[2]])), which(colnames(IE_list[[7]]) == "um_u3_axial")]),
  
  max_u4_x = c(IE_list[[3]][which.max(abs(IE_list[[3]][[2]])), which(colnames(IE_list[[3]]) == "um_u4_axial")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[2]])), which(colnames(IE_list[[4]]) == "um_u4_axial")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u4_axial")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[2]])), which(colnames(IE_list[[6]]) == "um_u4_axial")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[2]])), which(colnames(IE_list[[7]]) == "um_u4_axial")]),
  
  max_u5_x = c(IE_list[[3]][which.max(abs(IE_list[[3]][[2]])), which(colnames(IE_list[[3]]) == "um_u5_axial")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[2]])), which(colnames(IE_list[[4]]) == "um_u5_axial")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u5_axial")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[2]])), which(colnames(IE_list[[6]]) == "um_u5_axial")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[2]])), which(colnames(IE_list[[7]]) == "um_u5_axial")]),

  max_u1_y = c(IE_list[[3]][which.max(abs(IE_list[[3]][[3]])), which(colnames(IE_list[[3]]) == "um_u1_abd_add")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[3]])), which(colnames(IE_list[[4]]) == "um_u1_abd_add")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[3]])), which(colnames(IE_list[[5]]) == "um_u1_abd_add")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[3]])), which(colnames(IE_list[[6]]) == "um_u1_abd_add")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[3]])), which(colnames(IE_list[[7]]) == "um_u1_abd_add")]),
  
  max_u2_y = c(IE_list[[3]][which.max(abs(IE_list[[3]][[3]])), which(colnames(IE_list[[3]]) == "um_u2_abd_add")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[3]])), which(colnames(IE_list[[4]]) == "um_u2_abd_add")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[3]])), which(colnames(IE_list[[5]]) == "um_u2_abd_add")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[3]])), which(colnames(IE_list[[6]]) == "um_u2_abd_add")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[3]])), which(colnames(IE_list[[7]]) == "um_u2_abd_add")]),
  
  max_u3_y = c(IE_list[[3]][which.max(abs(IE_list[[3]][[3]])), which(colnames(IE_list[[3]]) == "um_u3_abd_add")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[3]])), which(colnames(IE_list[[4]]) == "um_u3_abd_add")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[3]])), which(colnames(IE_list[[5]]) == "um_u3_abd_add")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[3]])), which(colnames(IE_list[[6]]) == "um_u3_abd_add")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[3]])), which(colnames(IE_list[[7]]) == "um_u3_abd_add")]),
  
  max_u4_y = c(IE_list[[3]][which.max(abs(IE_list[[3]][[3]])), which(colnames(IE_list[[3]]) == "um_u4_abd_add")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[3]])), which(colnames(IE_list[[4]]) == "um_u4_abd_add")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[3]])), which(colnames(IE_list[[5]]) == "um_u4_abd_add")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[3]])), which(colnames(IE_list[[6]]) == "um_u4_abd_add")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[3]])), which(colnames(IE_list[[7]]) == "um_u4_abd_add")]),
  
  max_u5_y = c(IE_list[[3]][which.max(abs(IE_list[[3]][[3]])), which(colnames(IE_list[[3]]) == "um_u5_abd_add")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[3]])), which(colnames(IE_list[[4]]) == "um_u5_abd_add")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[3]])), which(colnames(IE_list[[5]]) == "um_u5_abd_add")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[3]])), which(colnames(IE_list[[6]]) == "um_u5_abd_add")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[3]])), which(colnames(IE_list[[7]]) == "um_u5_abd_add")]),

  max_u1_z = c(IE_list[[3]][which.max(abs(IE_list[[3]][[4]])), which(colnames(IE_list[[3]]) == "um_u1_pro_re")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[4]])), which(colnames(IE_list[[4]]) == "um_u1_pro_re")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[4]])), which(colnames(IE_list[[5]]) == "um_u1_pro_re")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[4]])), which(colnames(IE_list[[6]]) == "um_u1_pro_re")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[4]])), which(colnames(IE_list[[7]]) == "um_u1_pro_re")]),
  
  max_u2_z = c(IE_list[[3]][which.max(abs(IE_list[[3]][[4]])), which(colnames(IE_list[[3]]) == "um_u2_pro_re")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[4]])), which(colnames(IE_list[[4]]) == "um_u2_pro_re")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[4]])), which(colnames(IE_list[[5]]) == "um_u2_pro_re")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[4]])), which(colnames(IE_list[[6]]) == "um_u2_pro_re")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[4]])), which(colnames(IE_list[[7]]) == "um_u2_pro_re")]),
  
  max_u3_z = c(IE_list[[3]][which.max(abs(IE_list[[3]][[4]])), which(colnames(IE_list[[3]]) == "um_u3_pro_re")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[4]])), which(colnames(IE_list[[4]]) == "um_u3_pro_re")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[4]])), which(colnames(IE_list[[5]]) == "um_u3_pro_re")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[4]])), which(colnames(IE_list[[6]]) == "um_u3_pro_re")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[4]])), which(colnames(IE_list[[7]]) == "um_u3_pro_re")]),
  
  max_u4_z = c(IE_list[[3]][which.max(abs(IE_list[[3]][[4]])), which(colnames(IE_list[[3]]) == "um_u4_pro_re")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[4]])), which(colnames(IE_list[[4]]) == "um_u4_pro_re")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[4]])), which(colnames(IE_list[[5]]) == "um_u4_pro_re")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[4]])), which(colnames(IE_list[[6]]) == "um_u4_pro_re")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[4]])), which(colnames(IE_list[[7]]) == "um_u4_pro_re")]),
  
  max_u5_z = c(IE_list[[3]][which.max(abs(IE_list[[3]][[4]])), which(colnames(IE_list[[3]]) == "um_u5_pro_re")],
               IE_list[[4]][which.max(abs(IE_list[[4]][[4]])), which(colnames(IE_list[[4]]) == "um_u5_pro_re")],
               IE_list[[5]][which.max(abs(IE_list[[5]][[4]])), which(colnames(IE_list[[5]]) == "um_u5_pro_re")],
               IE_list[[6]][which.max(abs(IE_list[[6]][[4]])), which(colnames(IE_list[[6]]) == "um_u5_pro_re")],
               IE_list[[7]][which.max(abs(IE_list[[7]][[4]])), which(colnames(IE_list[[7]]) == "um_u5_pro_re")]),
  
  real_u1_x = c(IE_list[[8]][which.max(abs(IE_list[[8]][[2]])), which(colnames(IE_list[[8]]) == "um_u1_axial")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[2]])), which(colnames(IE_list[[9]]) == "um_u1_axial")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u1_axial")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[2]])), which(colnames(IE_list[[11]]) == "um_u1_axial")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[2]])), which(colnames(IE_list[[12]]) == "um_u1_axial")]),
  
  real_u2_x = c(IE_list[[8]][which.max(abs(IE_list[[8]][[2]])), which(colnames(IE_list[[8]]) == "um_u2_axial")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[2]])), which(colnames(IE_list[[9]]) == "um_u2_axial")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u2_axial")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[2]])), which(colnames(IE_list[[11]]) == "um_u2_axial")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[2]])), which(colnames(IE_list[[12]]) == "um_u2_axial")]),
  
  real_u3_x = c(IE_list[[8]][which.max(abs(IE_list[[8]][[2]])), which(colnames(IE_list[[8]]) == "um_u3_axial")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[2]])), which(colnames(IE_list[[9]]) == "um_u3_axial")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u3_axial")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[2]])), which(colnames(IE_list[[11]]) == "um_u3_axial")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[2]])), which(colnames(IE_list[[12]]) == "um_u3_axial")]),
  
  real_u4_x = c(IE_list[[8]][which.max(abs(IE_list[[8]][[2]])), which(colnames(IE_list[[8]]) == "um_u4_axial")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[2]])), which(colnames(IE_list[[9]]) == "um_u4_axial")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u4_axial")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[2]])), which(colnames(IE_list[[11]]) == "um_u4_axial")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[2]])), which(colnames(IE_list[[12]]) == "um_u4_axial")]),
  
  real_u5_x = c(IE_list[[8]][which.max(abs(IE_list[[8]][[2]])), which(colnames(IE_list[[8]]) == "um_u5_axial")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[2]])), which(colnames(IE_list[[9]]) == "um_u5_axial")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u5_axial")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[2]])), which(colnames(IE_list[[11]]) == "um_u5_axial")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[2]])), which(colnames(IE_list[[12]]) == "um_u5_axial")]),
  
  real_u1_y = c(IE_list[[8]][which.max(abs(IE_list[[8]][[3]])), which(colnames(IE_list[[8]]) == "um_u1_abd_add")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[3]])), which(colnames(IE_list[[9]]) == "um_u1_abd_add")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[3]])), which(colnames(IE_list[[10]]) == "um_u1_abd_add")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[3]])), which(colnames(IE_list[[11]]) == "um_u1_abd_add")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[3]])), which(colnames(IE_list[[12]]) == "um_u1_abd_add")]),
  
  real_u2_y = c(IE_list[[8]][which.max(abs(IE_list[[8]][[3]])), which(colnames(IE_list[[8]]) == "um_u2_abd_add")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[3]])), which(colnames(IE_list[[9]]) == "um_u2_abd_add")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[3]])), which(colnames(IE_list[[10]]) == "um_u2_abd_add")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[3]])), which(colnames(IE_list[[11]]) == "um_u2_abd_add")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[3]])), which(colnames(IE_list[[12]]) == "um_u2_abd_add")]),
  
  real_u3_y = c(IE_list[[8]][which.max(abs(IE_list[[8]][[3]])), which(colnames(IE_list[[8]]) == "um_u3_abd_add")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[3]])), which(colnames(IE_list[[9]]) == "um_u3_abd_add")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[3]])), which(colnames(IE_list[[10]]) == "um_u3_abd_add")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[3]])), which(colnames(IE_list[[11]]) == "um_u3_abd_add")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[3]])), which(colnames(IE_list[[12]]) == "um_u3_abd_add")]),
  
  real_u4_y = c(IE_list[[8]][which.max(abs(IE_list[[8]][[3]])), which(colnames(IE_list[[8]]) == "um_u4_abd_add")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[3]])), which(colnames(IE_list[[9]]) == "um_u4_abd_add")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[3]])), which(colnames(IE_list[[10]]) == "um_u4_abd_add")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[3]])), which(colnames(IE_list[[11]]) == "um_u4_abd_add")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[3]])), which(colnames(IE_list[[12]]) == "um_u4_abd_add")]),
  
  real_u5_y = c(IE_list[[8]][which.max(abs(IE_list[[8]][[3]])), which(colnames(IE_list[[8]]) == "um_u5_abd_add")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[3]])), which(colnames(IE_list[[9]]) == "um_u5_abd_add")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[3]])), which(colnames(IE_list[[10]]) == "um_u5_abd_add")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[3]])), which(colnames(IE_list[[11]]) == "um_u5_abd_add")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[3]])), which(colnames(IE_list[[12]]) == "um_u5_abd_add")]),
  
  real_u1_z = c(IE_list[[8]][which.max(abs(IE_list[[8]][[4]])), which(colnames(IE_list[[8]]) == "um_u1_pro_re")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[4]])), which(colnames(IE_list[[9]]) == "um_u1_pro_re")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[4]])), which(colnames(IE_list[[10]]) == "um_u1_pro_re")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[4]])), which(colnames(IE_list[[11]]) == "um_u1_pro_re")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[4]])), which(colnames(IE_list[[12]]) == "um_u1_pro_re")]),
  
  real_u2_z = c(IE_list[[8]][which.max(abs(IE_list[[8]][[4]])), which(colnames(IE_list[[8]]) == "um_u2_pro_re")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[4]])), which(colnames(IE_list[[9]]) == "um_u2_pro_re")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[4]])), which(colnames(IE_list[[10]]) == "um_u2_pro_re")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[4]])), which(colnames(IE_list[[11]]) == "um_u2_pro_re")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[4]])), which(colnames(IE_list[[12]]) == "um_u2_pro_re")]),
  
  real_u3_z = c(IE_list[[8]][which.max(abs(IE_list[[8]][[4]])), which(colnames(IE_list[[8]]) == "um_u3_pro_re")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[4]])), which(colnames(IE_list[[9]]) == "um_u3_pro_re")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[4]])), which(colnames(IE_list[[10]]) == "um_u3_pro_re")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[4]])), which(colnames(IE_list[[11]]) == "um_u3_pro_re")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[4]])), which(colnames(IE_list[[12]]) == "um_u3_pro_re")]),
  
  real_u4_z = c(IE_list[[8]][which.max(abs(IE_list[[8]][[4]])), which(colnames(IE_list[[8]]) == "um_u4_pro_re")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[4]])), which(colnames(IE_list[[9]]) == "um_u4_pro_re")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[4]])), which(colnames(IE_list[[10]]) == "um_u4_pro_re")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[4]])), which(colnames(IE_list[[11]]) == "um_u4_pro_re")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[4]])), which(colnames(IE_list[[12]]) == "um_u4_pro_re")]),
  
  real_u5_z = c(IE_list[[8]][which.max(abs(IE_list[[8]][[4]])), which(colnames(IE_list[[8]]) == "um_u5_pro_re")],
               IE_list[[9]][which.max(abs(IE_list[[9]][[4]])), which(colnames(IE_list[[9]]) == "um_u5_pro_re")],
               IE_list[[10]][which.max(abs(IE_list[[10]][[4]])), which(colnames(IE_list[[10]]) == "um_u5_pro_re")],
               IE_list[[11]][which.max(abs(IE_list[[11]][[4]])), which(colnames(IE_list[[11]]) == "um_u5_pro_re")],
               IE_list[[12]][which.max(abs(IE_list[[12]][[4]])), which(colnames(IE_list[[12]]) == "um_u5_pro_re")]))

IE_bar <- reshape2::melt(IE_data, id.var = "jnt")

IE_bar <- IE_bar %>%
  mutate(oROM = if_else(str_detect(IE_bar[[2]], "max_"), "max", "real")) %>%
  mutate(xyz = if_else(str_detect(IE_bar[[2]], "_x"), "axial_rotation", 
                       if_else(str_detect(IE_bar[[2]], "_y"), "abduct_adduct",
                               "pro_retract"))) %>%
  mutate(unit = if_else(str_detect(IE_bar[[2]], "_u1_"), "unit 1", 
                        if_else(str_detect(IE_bar[[2]], "_u2_"), "unit 2",
                                if_else(str_detect(IE_bar[[2]], "_u3_"), "unit 3",
                                        if_else(str_detect(IE_bar[[2]], "_u4_"), "unit 4", "unit 5")))))

# APC
APC_data <- data.frame(
  jnt = c("C23", "C24", "PC23", "PC24"),
  max_u1_x = c(APC_list[[1]][which.max(abs(APC_list[[1]][[2]])), which(colnames(APC_list[[1]]) == "um_u1_axial")],
               APC_list[[2]][which.max(abs(APC_list[[2]][[2]])), which(colnames(APC_list[[2]]) == "um_u1_axial")],
               APC_list[[5]][which.max(abs(APC_list[[5]][[2]])), which(colnames(APC_list[[5]]) == "um_u1_axial")],
               APC_list[[6]][which.max(abs(APC_list[[6]][[2]])), which(colnames(APC_list[[6]]) == "um_u1_axial")]),
  
  max_u2_x = c(APC_list[[1]][which.max(abs(APC_list[[1]][[2]])), which(colnames(APC_list[[1]]) == "um_u2_axial")],
               APC_list[[2]][which.max(abs(APC_list[[2]][[2]])), which(colnames(APC_list[[2]]) == "um_u2_axial")]),
  
  max_u1_y = c(APC_list[[1]][which.max(abs(APC_list[[1]][[3]])), which(colnames(APC_list[[1]]) == "um_u1_abd_add")],
               APC_list[[2]][which.max(abs(APC_list[[2]][[3]])), which(colnames(APC_list[[2]]) == "um_u1_abd_add")],
               APC_list[[5]][which.max(abs(APC_list[[5]][[3]])), which(colnames(APC_list[[5]]) == "um_u1_abd_add")],
               APC_list[[6]][which.max(abs(APC_list[[6]][[3]])), which(colnames(APC_list[[6]]) == "um_u1_abd_add")]),
  
  max_u2_y = c(APC_list[[1]][which.max(abs(APC_list[[1]][[3]])), which(colnames(APC_list[[1]]) == "um_u2_abd_add")],
               APC_list[[2]][which.max(abs(APC_list[[2]][[3]])), which(colnames(APC_list[[2]]) == "um_u2_abd_add")]),
  
  max_u1_z = c(APC_list[[1]][which.max(abs(APC_list[[1]][[4]])), which(colnames(APC_list[[1]]) == "um_u1_pro_re")],
               APC_list[[2]][which.max(abs(APC_list[[2]][[4]])), which(colnames(APC_list[[2]]) == "um_u1_pro_re")],
               APC_list[[5]][which.max(abs(APC_list[[5]][[4]])), which(colnames(APC_list[[5]]) == "um_u1_pro_re")],
               APC_list[[6]][which.max(abs(APC_list[[6]][[4]])), which(colnames(APC_list[[6]]) == "um_u1_pro_re")]),
  
  max_u2_z = c(APC_list[[1]][which.max(abs(APC_list[[1]][[4]])), which(colnames(APC_list[[1]]) == "um_u2_pro_re")],
               APC_list[[2]][which.max(abs(APC_list[[2]][[4]])), which(colnames(APC_list[[2]]) == "um_u2_pro_re")]),
  
  real_u1_x = c(APC_list[[3]][which.max(abs(APC_list[[3]][[2]])), which(colnames(APC_list[[3]]) == "um_u1_axial")],
                APC_list[[4]][which.max(abs(APC_list[[4]][[2]])), which(colnames(APC_list[[4]]) == "um_u1_axial")],
                APC_list[[7]][which.max(abs(APC_list[[7]][[2]])), which(colnames(APC_list[[7]]) == "um_u1_axial")],
                APC_list[[8]][which.max(abs(APC_list[[8]][[2]])), which(colnames(APC_list[[8]]) == "um_u1_axial")]),
  
  real_u2_x = c(APC_list[[3]][which.max(abs(APC_list[[3]][[2]])), which(colnames(APC_list[[3]]) == "um_u2_axial")],
                APC_list[[4]][which.max(abs(APC_list[[4]][[2]])), which(colnames(APC_list[[4]]) == "um_u2_axial")]),
  
  real_u1_y = c(APC_list[[3]][which.max(abs(APC_list[[3]][[3]])), which(colnames(APC_list[[3]]) == "um_u1_abd_add")],
                APC_list[[4]][which.max(abs(APC_list[[4]][[3]])), which(colnames(APC_list[[4]]) == "um_u1_abd_add")],
                APC_list[[7]][which.max(abs(APC_list[[7]][[3]])), which(colnames(APC_list[[7]]) == "um_u1_abd_add")],
                APC_list[[8]][which.max(abs(APC_list[[8]][[3]])), which(colnames(APC_list[[8]]) == "um_u1_abd_add")]),
  
  real_u2_y = c(APC_list[[3]][which.max(abs(APC_list[[3]][[3]])), which(colnames(APC_list[[3]]) == "um_u2_abd_add")],
                APC_list[[4]][which.max(abs(APC_list[[4]][[3]])), which(colnames(APC_list[[4]]) == "um_u2_abd_add")]),
  
  real_u1_z = c(APC_list[[3]][which.max(abs(APC_list[[3]][[4]])), which(colnames(APC_list[[3]]) == "um_u1_pro_re")],
                APC_list[[4]][which.max(abs(APC_list[[4]][[4]])), which(colnames(APC_list[[4]]) == "um_u1_pro_re")],
                APC_list[[7]][which.max(abs(APC_list[[7]][[4]])), which(colnames(APC_list[[7]]) == "um_u1_pro_re")],
                APC_list[[8]][which.max(abs(APC_list[[8]][[4]])), which(colnames(APC_list[[8]]) == "um_u1_pro_re")]),
  
  real_u2_z = c(APC_list[[3]][which.max(abs(APC_list[[3]][[4]])), which(colnames(APC_list[[3]]) == "um_u2_pro_re")],
                APC_list[[4]][which.max(abs(APC_list[[4]][[4]])), which(colnames(APC_list[[4]]) == "um_u2_pro_re")]))

APC_bar <- reshape2::melt(APC_data, id.var = "jnt")

APC_bar <- APC_bar %>%
  mutate(oROM = if_else(str_detect(APC_bar[[2]], "max_"), "max", "real")) %>%
  mutate(xyz = if_else(str_detect(APC_bar[[2]], "_x"), "axial_rotation", 
                       if_else(str_detect(APC_bar[[2]], "_y"), "abduct_adduct",
                               "pro_retract"))) %>%
  mutate(unit = if_else(str_detect(APC_bar[[2]], "_u1_"), "unit 1", "unit 2"))

# II
II_data <- data.frame(
  jnt = c("C21", "C22", "C23", "C24"),
  max_u1_x = c(II_list[[3]][which.max(abs(II_list[[3]][[2]])), which(colnames(II_list[[3]]) == "um_u1_axial")],
               II_list[[4]][which.max(abs(II_list[[4]][[2]])), which(colnames(II_list[[4]]) == "um_u1_axial")],
               II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u1_axial")],
               II_list[[6]][which.max(abs(II_list[[6]][[2]])), which(colnames(II_list[[6]]) == "um_u1_axial")]),
  
  max_u2_x = c(II_list[[3]][which.max(abs(II_list[[3]][[2]])), which(colnames(II_list[[3]]) == "um_u2_axial")],
               II_list[[4]][which.max(abs(II_list[[4]][[2]])), which(colnames(II_list[[4]]) == "um_u2_axial")],
               II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u2_axial")],
               II_list[[6]][which.max(abs(II_list[[6]][[2]])), which(colnames(II_list[[6]]) == "um_u2_axial")]),
  
  max_u3_x = c(II_list[[3]][which.max(abs(II_list[[3]][[2]])), which(colnames(II_list[[3]]) == "um_u3_axial")],
               II_list[[4]][which.max(abs(II_list[[4]][[2]])), which(colnames(II_list[[4]]) == "um_u3_axial")],
               II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u3_axial")],
               II_list[[6]][which.max(abs(II_list[[6]][[2]])), which(colnames(II_list[[6]]) == "um_u3_axial")]),
  
  max_u4_x = c(II_list[[3]][which.max(abs(II_list[[3]][[2]])), which(colnames(II_list[[3]]) == "um_u4_axial")],
               II_list[[4]][which.max(abs(II_list[[4]][[2]])), which(colnames(II_list[[4]]) == "um_u4_axial")],
               II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u4_axial")],
               II_list[[6]][which.max(abs(II_list[[6]][[2]])), which(colnames(II_list[[6]]) == "um_u4_axial")]),
  
  max_u5_x = c(II_list[[3]][which.max(abs(II_list[[3]][[2]])), which(colnames(II_list[[3]]) == "um_u5_axial")],
               II_list[[4]][which.max(abs(II_list[[4]][[2]])), which(colnames(II_list[[4]]) == "um_u5_axial")],
               II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u5_axial")],
               II_list[[6]][which.max(abs(II_list[[6]][[2]])), which(colnames(II_list[[6]]) == "um_u5_axial")]),
  
  max_u1_y = c(II_list[[3]][which.max(abs(II_list[[3]][[3]])), which(colnames(II_list[[3]]) == "um_u1_abd_add")],
               II_list[[4]][which.max(abs(II_list[[4]][[3]])), which(colnames(II_list[[4]]) == "um_u1_abd_add")],
               II_list[[5]][which.max(abs(II_list[[5]][[3]])), which(colnames(II_list[[5]]) == "um_u1_abd_add")],
               II_list[[6]][which.max(abs(II_list[[6]][[3]])), which(colnames(II_list[[6]]) == "um_u1_abd_add")]),
  
  max_u2_y = c(II_list[[3]][which.max(abs(II_list[[3]][[3]])), which(colnames(II_list[[3]]) == "um_u2_abd_add")],
               II_list[[4]][which.max(abs(II_list[[4]][[3]])), which(colnames(II_list[[4]]) == "um_u2_abd_add")],
               II_list[[5]][which.max(abs(II_list[[5]][[3]])), which(colnames(II_list[[5]]) == "um_u2_abd_add")],
               II_list[[6]][which.max(abs(II_list[[6]][[3]])), which(colnames(II_list[[6]]) == "um_u2_abd_add")]),
  
  max_u3_y = c(II_list[[3]][which.max(abs(II_list[[3]][[3]])), which(colnames(II_list[[3]]) == "um_u3_abd_add")],
               II_list[[4]][which.max(abs(II_list[[4]][[3]])), which(colnames(II_list[[4]]) == "um_u3_abd_add")],
               II_list[[5]][which.max(abs(II_list[[5]][[3]])), which(colnames(II_list[[5]]) == "um_u3_abd_add")],
               II_list[[6]][which.max(abs(II_list[[6]][[3]])), which(colnames(II_list[[6]]) == "um_u3_abd_add")]),
  
  max_u4_y = c(II_list[[3]][which.max(abs(II_list[[3]][[3]])), which(colnames(II_list[[3]]) == "um_u4_abd_add")],
               II_list[[4]][which.max(abs(II_list[[4]][[3]])), which(colnames(II_list[[4]]) == "um_u4_abd_add")],
               II_list[[5]][which.max(abs(II_list[[5]][[3]])), which(colnames(II_list[[5]]) == "um_u4_abd_add")],
               II_list[[6]][which.max(abs(II_list[[6]][[3]])), which(colnames(II_list[[6]]) == "um_u4_abd_add")]),
  
  max_u5_y = c(II_list[[3]][which.max(abs(II_list[[3]][[3]])), which(colnames(II_list[[3]]) == "um_u5_abd_add")],
               II_list[[4]][which.max(abs(II_list[[4]][[3]])), which(colnames(II_list[[4]]) == "um_u5_abd_add")],
               II_list[[5]][which.max(abs(II_list[[5]][[3]])), which(colnames(II_list[[5]]) == "um_u5_abd_add")],
               II_list[[6]][which.max(abs(II_list[[6]][[3]])), which(colnames(II_list[[6]]) == "um_u5_abd_add")]),
  
  max_u1_z = c(II_list[[3]][which.max(abs(II_list[[3]][[4]])), which(colnames(II_list[[3]]) == "um_u1_pro_re")],
               II_list[[4]][which.max(abs(II_list[[4]][[4]])), which(colnames(II_list[[4]]) == "um_u1_pro_re")],
               II_list[[5]][which.max(abs(II_list[[5]][[4]])), which(colnames(II_list[[5]]) == "um_u1_pro_re")],
               II_list[[6]][which.max(abs(II_list[[6]][[4]])), which(colnames(II_list[[6]]) == "um_u1_pro_re")]),
  
  max_u2_z = c(II_list[[3]][which.max(abs(II_list[[3]][[4]])), which(colnames(II_list[[3]]) == "um_u2_pro_re")],
               II_list[[4]][which.max(abs(II_list[[4]][[4]])), which(colnames(II_list[[4]]) == "um_u2_pro_re")],
               II_list[[5]][which.max(abs(II_list[[5]][[4]])), which(colnames(II_list[[5]]) == "um_u2_pro_re")],
               II_list[[6]][which.max(abs(II_list[[6]][[4]])), which(colnames(II_list[[6]]) == "um_u2_pro_re")]),
  
  max_u3_z = c(II_list[[3]][which.max(abs(II_list[[3]][[4]])), which(colnames(II_list[[3]]) == "um_u3_pro_re")],
               II_list[[4]][which.max(abs(II_list[[4]][[4]])), which(colnames(II_list[[4]]) == "um_u3_pro_re")],
               II_list[[5]][which.max(abs(II_list[[5]][[4]])), which(colnames(II_list[[5]]) == "um_u3_pro_re")],
               II_list[[6]][which.max(abs(II_list[[6]][[4]])), which(colnames(II_list[[6]]) == "um_u3_pro_re")]),
  
  max_u4_z = c(II_list[[3]][which.max(abs(II_list[[3]][[4]])), which(colnames(II_list[[3]]) == "um_u4_pro_re")],
               II_list[[4]][which.max(abs(II_list[[4]][[4]])), which(colnames(II_list[[4]]) == "um_u4_pro_re")],
               II_list[[5]][which.max(abs(II_list[[5]][[4]])), which(colnames(II_list[[5]]) == "um_u4_pro_re")],
               II_list[[6]][which.max(abs(II_list[[6]][[4]])), which(colnames(II_list[[6]]) == "um_u4_pro_re")]),
  
  max_u5_z = c(II_list[[7]][which.max(abs(II_list[[7]][[4]])), which(colnames(II_list[[7]]) == "um_u5_pro_re")],
               II_list[[8]][which.max(abs(II_list[[8]][[4]])), which(colnames(II_list[[8]]) == "um_u5_pro_re")],
               II_list[[9]][which.max(abs(II_list[[9]][[4]])), which(colnames(II_list[[9]]) == "um_u5_pro_re")],
               II_list[[10]][which.max(abs(II_list[[10]][[4]])), which(colnames(II_list[[10]]) == "um_u5_pro_re")]),
  
  real_u1_x = c(II_list[[7]][which.max(abs(II_list[[7]][[2]])), which(colnames(II_list[[7]]) == "um_u1_axial")],
                II_list[[8]][which.max(abs(II_list[[8]][[2]])), which(colnames(II_list[[8]]) == "um_u1_axial")],
                II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u1_axial")],
                II_list[[10]][which.max(abs(II_list[[10]][[2]])), which(colnames(II_list[[10]]) == "um_u1_axial")]),
  
  real_u2_x = c(II_list[[7]][which.max(abs(II_list[[7]][[2]])), which(colnames(II_list[[7]]) == "um_u2_axial")],
                II_list[[8]][which.max(abs(II_list[[8]][[2]])), which(colnames(II_list[[8]]) == "um_u2_axial")],
                II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u2_axial")],
                II_list[[10]][which.max(abs(II_list[[10]][[2]])), which(colnames(II_list[[10]]) == "um_u2_axial")]),
  
  real_u3_x = c(II_list[[7]][which.max(abs(II_list[[7]][[2]])), which(colnames(II_list[[7]]) == "um_u3_axial")],
                II_list[[8]][which.max(abs(II_list[[8]][[2]])), which(colnames(II_list[[8]]) == "um_u3_axial")],
                II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u3_axial")],
                II_list[[10]][which.max(abs(II_list[[10]][[2]])), which(colnames(II_list[[10]]) == "um_u3_axial")]),
  
  real_u4_x = c(II_list[[7]][which.max(abs(II_list[[7]][[2]])), which(colnames(II_list[[7]]) == "um_u4_axial")],
                II_list[[8]][which.max(abs(II_list[[8]][[2]])), which(colnames(II_list[[8]]) == "um_u4_axial")],
                II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u4_axial")],
                II_list[[10]][which.max(abs(II_list[[10]][[2]])), which(colnames(II_list[[10]]) == "um_u4_axial")]),
  
  real_u5_x = c(II_list[[7]][which.max(abs(II_list[[7]][[2]])), which(colnames(II_list[[7]]) == "um_u5_axial")],
                II_list[[8]][which.max(abs(II_list[[8]][[2]])), which(colnames(II_list[[8]]) == "um_u5_axial")],
                II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u5_axial")],
                II_list[[10]][which.max(abs(II_list[[10]][[2]])), which(colnames(II_list[[10]]) == "um_u5_axial")]),
  
  real_u1_y = c(II_list[[7]][which.max(abs(II_list[[7]][[3]])), which(colnames(II_list[[7]]) == "um_u1_abd_add")],
                II_list[[8]][which.max(abs(II_list[[8]][[3]])), which(colnames(II_list[[8]]) == "um_u1_abd_add")],
                II_list[[9]][which.max(abs(II_list[[9]][[3]])), which(colnames(II_list[[9]]) == "um_u1_abd_add")],
                II_list[[10]][which.max(abs(II_list[[10]][[3]])), which(colnames(II_list[[10]]) == "um_u1_abd_add")]),
  
  real_u2_y = c(II_list[[7]][which.max(abs(II_list[[7]][[3]])), which(colnames(II_list[[7]]) == "um_u2_abd_add")],
                II_list[[8]][which.max(abs(II_list[[8]][[3]])), which(colnames(II_list[[8]]) == "um_u2_abd_add")],
                II_list[[9]][which.max(abs(II_list[[9]][[3]])), which(colnames(II_list[[9]]) == "um_u2_abd_add")],
                II_list[[10]][which.max(abs(II_list[[10]][[3]])), which(colnames(II_list[[10]]) == "um_u2_abd_add")]),
  
  real_u3_y = c(II_list[[7]][which.max(abs(II_list[[7]][[3]])), which(colnames(II_list[[7]]) == "um_u3_abd_add")],
                II_list[[8]][which.max(abs(II_list[[8]][[3]])), which(colnames(II_list[[8]]) == "um_u3_abd_add")],
                II_list[[9]][which.max(abs(II_list[[9]][[3]])), which(colnames(II_list[[9]]) == "um_u3_abd_add")],
                II_list[[10]][which.max(abs(II_list[[10]][[3]])), which(colnames(II_list[[10]]) == "um_u3_abd_add")]),
  
  real_u4_y = c(II_list[[7]][which.max(abs(II_list[[7]][[3]])), which(colnames(II_list[[7]]) == "um_u4_abd_add")],
                II_list[[8]][which.max(abs(II_list[[8]][[3]])), which(colnames(II_list[[8]]) == "um_u4_abd_add")],
                II_list[[9]][which.max(abs(II_list[[9]][[3]])), which(colnames(II_list[[9]]) == "um_u4_abd_add")],
                II_list[[10]][which.max(abs(II_list[[10]][[3]])), which(colnames(II_list[[10]]) == "um_u4_abd_add")]),
  
  real_u5_y = c(II_list[[7]][which.max(abs(II_list[[7]][[3]])), which(colnames(II_list[[7]]) == "um_u5_abd_add")],
                II_list[[8]][which.max(abs(II_list[[8]][[3]])), which(colnames(II_list[[8]]) == "um_u5_abd_add")],
                II_list[[9]][which.max(abs(II_list[[9]][[3]])), which(colnames(II_list[[9]]) == "um_u5_abd_add")],
                II_list[[10]][which.max(abs(II_list[[10]][[3]])), which(colnames(II_list[[10]]) == "um_u5_abd_add")]),
  
  real_u1_z = c(II_list[[7]][which.max(abs(II_list[[7]][[4]])), which(colnames(II_list[[7]]) == "um_u1_pro_re")],
                II_list[[8]][which.max(abs(II_list[[8]][[4]])), which(colnames(II_list[[8]]) == "um_u1_pro_re")],
                II_list[[9]][which.max(abs(II_list[[9]][[4]])), which(colnames(II_list[[9]]) == "um_u1_pro_re")],
                II_list[[10]][which.max(abs(II_list[[10]][[4]])), which(colnames(II_list[[10]]) == "um_u1_pro_re")]),
  
  real_u2_z = c(II_list[[7]][which.max(abs(II_list[[7]][[4]])), which(colnames(II_list[[7]]) == "um_u2_pro_re")],
                II_list[[8]][which.max(abs(II_list[[8]][[4]])), which(colnames(II_list[[8]]) == "um_u2_pro_re")],
                II_list[[9]][which.max(abs(II_list[[9]][[4]])), which(colnames(II_list[[9]]) == "um_u2_pro_re")],
                II_list[[10]][which.max(abs(II_list[[10]][[4]])), which(colnames(II_list[[10]]) == "um_u2_pro_re")]),
  
  real_u3_z = c(II_list[[7]][which.max(abs(II_list[[7]][[4]])), which(colnames(II_list[[7]]) == "um_u3_pro_re")],
                II_list[[8]][which.max(abs(II_list[[8]][[4]])), which(colnames(II_list[[8]]) == "um_u3_pro_re")],
                II_list[[9]][which.max(abs(II_list[[9]][[4]])), which(colnames(II_list[[9]]) == "um_u3_pro_re")],
                II_list[[10]][which.max(abs(II_list[[10]][[4]])), which(colnames(II_list[[10]]) == "um_u3_pro_re")]),
  
  real_u4_z = c(II_list[[7]][which.max(abs(II_list[[7]][[4]])), which(colnames(II_list[[7]]) == "um_u4_pro_re")],
                II_list[[8]][which.max(abs(II_list[[8]][[4]])), which(colnames(II_list[[8]]) == "um_u4_pro_re")],
                II_list[[9]][which.max(abs(II_list[[9]][[4]])), which(colnames(II_list[[9]]) == "um_u4_pro_re")],
                II_list[[10]][which.max(abs(II_list[[10]][[4]])), which(colnames(II_list[[10]]) == "um_u4_pro_re")]),
  
  real_u5_z = c(II_list[[7]][which.max(abs(II_list[[7]][[4]])), which(colnames(II_list[[7]]) == "um_u5_pro_re")],
                II_list[[8]][which.max(abs(II_list[[8]][[4]])), which(colnames(II_list[[8]]) == "um_u5_pro_re")],
                II_list[[9]][which.max(abs(II_list[[9]][[4]])), which(colnames(II_list[[9]]) == "um_u5_pro_re")],
                II_list[[10]][which.max(abs(II_list[[10]][[4]])), which(colnames(II_list[[10]]) == "um_u5_pro_re")]))

II_bar <- reshape2::melt(II_data, id.var = "jnt")

II_bar <- II_bar %>%
  mutate(oROM = if_else(str_detect(II_bar[[2]], "max_"), "max", "real")) %>%
  mutate(xyz = if_else(str_detect(II_bar[[2]], "_x"), "axial_rotation", 
                       if_else(str_detect(II_bar[[2]], "_y"), "abduct_adduct",
                               "pro_retract"))) %>%
  mutate(unit = if_else(str_detect(II_bar[[2]], "_u1_"), "unit 1", 
                        if_else(str_detect(II_bar[[2]], "_u2_"), "unit 2",
                                if_else(str_detect(II_bar[[2]], "_u3_"), "unit 3",
                                        if_else(str_detect(II_bar[[2]], "_u4_"), "unit 4", "unit 5")))))

#COT
COT_data <- data.frame(
  jnt = c("IR21", "IR22", "IR23"),
  max_u1_x = c(COT_list[[1]][which.max(abs(COT_list[[1]][[2]])), which(colnames(COT_list[[1]]) == "um_u1_axial")],
               COT_list[[2]][which.max(abs(COT_list[[2]][[2]])), which(colnames(COT_list[[2]]) == "um_u1_axial")],
               COT_list[[3]][which.max(abs(COT_list[[3]][[2]])), which(colnames(COT_list[[3]]) == "um_u1_axial")]),
  
  max_u1_y = c(LC_list[[1]][which.max(abs(LC_list[[1]][[3]])), which(colnames(LC_list[[1]]) == "um_u1_abd_add")],
               LC_list[[2]][which.max(abs(LC_list[[2]][[3]])), which(colnames(LC_list[[2]]) == "um_u1_abd_add")],
               LC_list[[3]][which.max(abs(LC_list[[3]][[3]])), which(colnames(LC_list[[3]]) == "um_u1_abd_add")]),
  
  max_u1_z = c(LC_list[[1]][which.max(abs(LC_list[[1]][[4]])), which(colnames(LC_list[[1]]) == "um_u1_pro_re")],
               LC_list[[2]][which.max(abs(LC_list[[2]][[4]])), which(colnames(LC_list[[2]]) == "um_u1_pro_re")],
               LC_list[[3]][which.max(abs(LC_list[[3]][[4]])), which(colnames(LC_list[[3]]) == "um_u1_pro_re")]),
  
  real_u1_x = c(COT_list[[4]][which.max(abs(COT_list[[4]][[2]])), which(colnames(COT_list[[4]]) == "um_u1_axial")],
               COT_list[[5]][which.max(abs(COT_list[[5]][[2]])), which(colnames(COT_list[[5]]) == "um_u1_axial")],
               COT_list[[6]][which.max(abs(COT_list[[6]][[2]])), which(colnames(COT_list[[6]]) == "um_u1_axial")]),
  
  real_u1_y = c(LC_list[[4]][which.max(abs(LC_list[[4]][[3]])), which(colnames(LC_list[[4]]) == "um_u1_abd_add")],
               LC_list[[5]][which.max(abs(LC_list[[5]][[3]])), which(colnames(LC_list[[5]]) == "um_u1_abd_add")],
               LC_list[[6]][which.max(abs(LC_list[[6]][[3]])), which(colnames(LC_list[[6]]) == "um_u1_abd_add")]),
  
  real_u1_z = c(LC_list[[4]][which.max(abs(LC_list[[4]][[4]])), which(colnames(LC_list[[4]]) == "um_u1_pro_re")],
               LC_list[[5]][which.max(abs(LC_list[[5]][[4]])), which(colnames(LC_list[[5]]) == "um_u1_pro_re")],
               LC_list[[6]][which.max(abs(LC_list[[6]][[4]])), which(colnames(LC_list[[6]]) == "um_u1_pro_re")]))

COT_bar <- reshape2::melt(COT_data, id.var = "jnt")

COT_bar <- COT_bar %>%
  mutate(oROM = if_else(str_detect(COT_bar[[2]], "max_"), "max", "real")) %>%
  mutate(xyz = if_else(str_detect(COT_bar[[2]], "_x"), "axial_rotation", 
                       if_else(str_detect(COT_bar[[2]], "_y"), "abduct_adduct",
                               "pro_retract"))) %>%
  mutate(unit = if_else(str_detect(COT_bar[[2]], "_u1_"), "unit 1", 
                        if_else(str_detect(COT_bar[[2]], "_u1_"), "unit 2", "unit 3")))

#SC
SC_data <- data.frame(
  jnt = c("C21", "C22", "C23", "C24", "C25"),
  max_u1_x = c(SC_list[[1]][which.max(abs(SC_list[[1]][[2]])), which(colnames(SC_list[[1]]) == "um_u1_axial")],
               SC_list[[2]][which.max(abs(SC_list[[2]][[2]])), which(colnames(SC_list[[2]]) == "um_u1_axial")],
               SC_list[[3]][which.max(abs(SC_list[[3]][[2]])), which(colnames(SC_list[[3]]) == "um_u1_axial")],
               SC_list[[4]][which.max(abs(SC_list[[4]][[2]])), which(colnames(SC_list[[4]]) == "um_u1_axial")],
               SC_list[[5]][which.max(abs(SC_list[[5]][[2]])), which(colnames(SC_list[[5]]) == "um_u1_axial")]),
  
  max_u1_y = c(SC_list[[1]][which.max(abs(SC_list[[1]][[3]])), which(colnames(SC_list[[1]]) == "um_u1_abd_add")],
               SC_list[[2]][which.max(abs(SC_list[[2]][[3]])), which(colnames(SC_list[[2]]) == "um_u1_abd_add")],
               SC_list[[3]][which.max(abs(SC_list[[3]][[3]])), which(colnames(SC_list[[3]]) == "um_u1_abd_add")],
               SC_list[[4]][which.max(abs(SC_list[[4]][[3]])), which(colnames(SC_list[[4]]) == "um_u1_abd_add")],
               SC_list[[5]][which.max(abs(SC_list[[5]][[3]])), which(colnames(SC_list[[5]]) == "um_u1_abd_add")]),
  
  max_u1_z = c(SC_list[[1]][which.max(abs(SC_list[[1]][[4]])), which(colnames(SC_list[[1]]) == "um_u1_pro_re")],
               SC_list[[2]][which.max(abs(SC_list[[2]][[4]])), which(colnames(SC_list[[2]]) == "um_u1_pro_re")],
               SC_list[[3]][which.max(abs(SC_list[[3]][[4]])), which(colnames(SC_list[[3]]) == "um_u1_pro_re")],
               SC_list[[4]][which.max(abs(SC_list[[4]][[4]])), which(colnames(SC_list[[4]]) == "um_u1_pro_re")],
               SC_list[[5]][which.max(abs(SC_list[[5]][[4]])), which(colnames(SC_list[[5]]) == "um_u1_pro_re")]),
  
  real_u1_x = c(SC_list[[6]][which.max(abs(SC_list[[6]][[2]])), which(colnames(SC_list[[6]]) == "um_u1_axial")],
                SC_list[[7]][which.max(abs(SC_list[[7]][[2]])), which(colnames(SC_list[[7]]) == "um_u1_axial")],
                SC_list[[8]][which.max(abs(SC_list[[8]][[2]])), which(colnames(SC_list[[8]]) == "um_u1_axial")],
                SC_list[[9]][which.max(abs(SC_list[[9]][[2]])), which(colnames(SC_list[[9]]) == "um_u1_axial")],
                SC_list[[10]][which.max(abs(SC_list[[10]][[2]])), which(colnames(SC_list[[10]]) == "um_u1_axial")]),
  
  real_u1_y = c(SC_list[[6]][which.max(abs(SC_list[[6]][[3]])), which(colnames(SC_list[[6]]) == "um_u1_abd_add")],
                SC_list[[7]][which.max(abs(SC_list[[7]][[3]])), which(colnames(SC_list[[7]]) == "um_u1_abd_add")],
                SC_list[[8]][which.max(abs(SC_list[[8]][[3]])), which(colnames(SC_list[[8]]) == "um_u1_abd_add")],
                SC_list[[9]][which.max(abs(SC_list[[9]][[3]])), which(colnames(SC_list[[9]]) == "um_u1_abd_add")],
                SC_list[[10]][which.max(abs(SC_list[[10]][[3]])), which(colnames(SC_list[[10]]) == "um_u1_abd_add")]),
  
  real_u1_z = c(SC_list[[6]][which.max(abs(SC_list[[6]][[4]])), which(colnames(SC_list[[6]]) == "um_u1_pro_re")],
                SC_list[[7]][which.max(abs(SC_list[[7]][[4]])), which(colnames(SC_list[[7]]) == "um_u1_pro_re")],
                SC_list[[8]][which.max(abs(SC_list[[8]][[4]])), which(colnames(SC_list[[8]]) == "um_u1_pro_re")],
                SC_list[[9]][which.max(abs(SC_list[[9]][[4]])), which(colnames(SC_list[[9]]) == "um_u1_pro_re")],
                SC_list[[10]][which.max(abs(SC_list[[10]][[4]])), which(colnames(SC_list[[10]]) == "um_u1_pro_re")]))

SC_bar <- reshape2::melt(SC_data, id.var = "jnt")

SC_bar <- SC_bar %>%
  mutate(oROM = if_else(str_detect(SC_bar[[2]], "max_"), "max", "real")) %>%
  mutate(xyz = if_else(str_detect(SC_bar[[2]], "_x"), "axial_rotation", 
                       if_else(str_detect(SC_bar[[2]], "_y"), "abduct_adduct",
                               "pro_retract"))) %>%
  mutate(unit = "unit 1")

#delta IE
del_IE_data <- data.frame(
  jnt = c("C23"),
  max_u1_x = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u1_axial")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u1_axial")])),
  
  max_u2_x = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u2_axial")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u2_axial")])),
  
  max_u3_x = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u3_axial")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u3_axial")])),
  
  max_u4_x = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u4_axial")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u4_axial")])),
  
  max_u5_x = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u5_axial")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u5_axial")])),
  
  max_u1_y = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u1_abd_add")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u1_abd_add")])),
  
  max_u2_y = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u2_abd_add")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u2_abd_add")])),
  
  max_u3_y = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u3_abd_add")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u3_abd_add")])),
  
  max_u4_y = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u4_abd_add")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u4_abd_add")])),
  
  max_u5_y = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u5_abd_add")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u5_abd_add")])),
  
  max_u1_z = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u1_pro_re")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u1_pro_re")])),
  
  max_u2_z = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u2_pro_re")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u2_pro_re")])),
  
  max_u3_z = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u3_pro_re")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u3_pro_re")])),
  
  max_u4_z = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u4_pro_re")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u4_pro_re")])),
  
  max_u5_z = c((IE_list[[5]][which.max(abs(IE_list[[5]][[2]])), which(colnames(IE_list[[5]]) == "um_u5_pro_re")]) + 
                 (IE_list[[1]][which.max(abs(IE_list[[1]][[2]])), which(colnames(IE_list[[1]]) == "um_u5_pro_re")])),
  
  real_u1_x = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u1_axial")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u1_axial")])),
  
  real_u2_x = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u2_axial")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u2_axial")])),
  
  real_u3_x = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u3_axial")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u3_axial")])),
  
  real_u4_x = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u4_axial")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u4_axial")])),
  
  real_u5_x = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u5_axial")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u5_axial")])),
  
  real_u1_y = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u1_abd_add")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u1_abd_add")])),
  
  real_u2_y = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u2_abd_add")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u2_abd_add")])),
  
  real_u3_y = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u3_abd_add")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u3_abd_add")])),
  
  real_u4_y = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u4_abd_add")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u4_abd_add")])),
  
  real_u5_y = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u5_abd_add")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u5_abd_add")])),
  
  real_u1_z = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u1_pro_re")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u1_pro_re")])),
  
  real_u2_z = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u2_pro_re")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u2_pro_re")])),
  
  real_u3_z = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u3_pro_re")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u3_pro_re")])),
  
  real_u4_z = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u4_pro_re")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u4_pro_re")])),
  
  real_u5_z = c((IE_list[[10]][which.max(abs(IE_list[[10]][[2]])), which(colnames(IE_list[[10]]) == "um_u5_pro_re")]) + 
                 (IE_list[[2]][which.max(abs(IE_list[[2]][[2]])), which(colnames(IE_list[[2]]) == "um_u5_pro_re")])))

del_IE_bar <- reshape2::melt(del_IE_data, id.var = "jnt")

del_IE_bar <- del_IE_bar %>%
  mutate(oROM = if_else(str_detect(del_IE_bar[[2]], "max_"), "max", "real")) %>%
  mutate(xyz = if_else(str_detect(del_IE_bar[[2]], "_x"), "axial_rotation", 
                       if_else(str_detect(del_IE_bar[[2]], "_y"), "abduct_adduct",
                               "pro_retract"))) %>%
  mutate(unit = if_else(str_detect(del_IE_bar[[2]], "_u1_"), "unit 1", 
                        if_else(str_detect(del_IE_bar[[2]], "_u2_"), "unit 2",
                                if_else(str_detect(del_IE_bar[[2]], "_u3_"), "unit 3",
                                        if_else(str_detect(del_IE_bar[[2]], "_u4_"), "unit 4", "unit 5")))))

#delta II
del_II_data <- data.frame(
  jnt = c("C23"),
  max_u1_x = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u1_axial")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u1_axial")])),
  
  max_u2_x = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u2_axial")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u2_axial")])),
  
  max_u3_x = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u3_axial")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u3_axial")])),
  
  max_u4_x = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u4_axial")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u4_axial")])),
  
  max_u5_x = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u5_axial")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u5_axial")])),
  
  max_u1_y = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u1_abd_add")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u1_abd_add")])),
  
  max_u2_y = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u2_abd_add")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u2_abd_add")])),
  
  max_u3_y = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u3_abd_add")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u3_abd_add")])),
  
  max_u4_y = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u4_abd_add")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u4_abd_add")])),
  
  max_u5_y = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u5_abd_add")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u5_abd_add")])),
  
  max_u1_z = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u1_pro_re")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u1_pro_re")])),
  
  max_u2_z = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u2_pro_re")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u2_pro_re")])),
  
  max_u3_z = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u3_pro_re")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u3_pro_re")])),
  
  max_u4_z = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u4_pro_re")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u4_pro_re")])),
  
  max_u5_z = c((II_list[[1]][which.max(abs(II_list[[1]][[2]])), which(colnames(II_list[[1]]) == "um_u5_pro_re")]) + 
                 (II_list[[5]][which.max(abs(II_list[[5]][[2]])), which(colnames(II_list[[5]]) == "um_u5_pro_re")])),
  
  real_u1_x = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u1_axial")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u1_axial")])),
  
  real_u2_x = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u2_axial")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u2_axial")])),
  
  real_u3_x = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u3_axial")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u3_axial")])),
  
  real_u4_x = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u4_axial")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u4_axial")])),
  
  real_u5_x = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u5_axial")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u5_axial")])),
  
  real_u1_y = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u1_abd_add")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u1_abd_add")])),
  
  real_u2_y = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u2_abd_add")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u2_abd_add")])),
  
  real_u3_y = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u3_abd_add")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u3_abd_add")])),
  
  real_u4_y = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u4_abd_add")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u4_abd_add")])),
  
  real_u5_y = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u5_abd_add")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u5_abd_add")])),
  
  real_u1_z = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u1_pro_re")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u1_pro_re")])),
  
  real_u2_z = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u2_pro_re")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u2_pro_re")])),
  
  real_u3_z = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u3_pro_re")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u3_pro_re")])),
  
  real_u4_z = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u4_pro_re")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u4_pro_re")])),
  
  real_u5_z = c((II_list[[2]][which.max(abs(II_list[[2]][[2]])), which(colnames(II_list[[2]]) == "um_u5_pro_re")]) + 
                  (II_list[[9]][which.max(abs(II_list[[9]][[2]])), which(colnames(II_list[[9]]) == "um_u5_pro_re")])))

del_II_bar <- reshape2::melt(del_II_data, id.var = "jnt")

del_II_bar <- del_II_bar %>%
  mutate(oROM = if_else(str_detect(del_II_bar[[2]], "max_"), "max", "real")) %>%
  mutate(xyz = if_else(str_detect(del_II_bar[[2]], "_x"), "axial_rotation", 
                       if_else(str_detect(del_II_bar[[2]], "_y"), "abduct_adduct",
                               "pro_retract"))) %>%
  mutate(unit = if_else(str_detect(del_II_bar[[2]], "_u1_"), "unit 1", 
                        if_else(str_detect(del_II_bar[[2]], "_u2_"), "unit 2",
                                if_else(str_detect(del_II_bar[[2]], "_u3_"), "unit 3",
                                        if_else(str_detect(del_II_bar[[2]], "_u4_"), "unit 4", "unit 5")))))
# create muscle bar list
mus_bar_list <- list(LC_bar, IE_bar, APC_bar, II_bar, COT_bar, 
                     SC_bar, del_IE_bar, del_II_bar)
names(mus_bar_list) <- c("LC_bar", "IE_bar", "APC_bar", "II_bar", "COT_bar", 
                         "SC_bar", "del_IE_bar", "del_II_bar")

# make bar plots
for(i in 1:length(mus_bar_list)){
max_x <- mus_bar_list[[i]] %>% 
  filter(mus_bar_list[[i]][4] == "max" 
         & mus_bar_list[[i]][5] == "axial_rotation")
real_x <- mus_bar_list[[i]] %>% 
  filter(mus_bar_list[[i]][4] == "real" 
         & mus_bar_list[[i]][5] == "axial_rotation")

plot_x <- ggplot() +
  geom_bar(data = max_x, 
           aes(x = jnt, y = value, fill = unit), 
           stat = "identity", position = "dodge", alpha = .3) +
  geom_bar(data = real_x, 
           aes(x = jnt, y = value, fill = unit), 
           stat = "identity", position = "dodge", alpha = .8) +
  scale_fill_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689"))  +
  scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
  geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
  xlab("Costal joints") +
  ylab("Moment arms (m)") +
  theme_classic() +
  theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
        axis.text.y = element_text(size = 10),
        axis.text.x = element_text(size = 10),
        axis.title = element_text(size = 12))
  
max_y <- mus_bar_list[[i]] %>% 
  filter(mus_bar_list[[i]][4] == "max" 
         & mus_bar_list[[i]][5] == "abduct_adduct")
real_y <- mus_bar_list[[i]] %>% 
  filter(mus_bar_list[[i]][4] == "real" 
         & mus_bar_list[[i]][5] == "abduct_adduct")

plot_y <- ggplot() +
  geom_bar(data = max_y, 
           aes(x = jnt, y = value, fill = unit), 
           stat = "identity", position = "dodge", alpha = .3) +
  geom_bar(data = real_y, 
           aes(x = jnt, y = value, fill = unit), 
           stat = "identity", position = "dodge", alpha = .8) +
  scale_fill_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
  scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
  geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
  xlab("Costal joints") +
  ylab("Moment arms (m)") +
  theme_classic() +
  theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
        axis.text.y = element_text(size = 10),
        axis.text.x = element_text(size = 10),
        axis.title = element_text(size = 12))

max_z <- mus_bar_list[[i]] %>% 
  filter(mus_bar_list[[i]][4] == "max" 
         & mus_bar_list[[i]][5] == "pro_retract")
real_z <- mus_bar_list[[i]] %>% 
  filter(mus_bar_list[[i]][4] == "real" 
         & mus_bar_list[[i]][5] == "pro_retract")

plot_z <- ggplot() +
  geom_bar(data = max_y, 
           aes(x = jnt, y = value, fill = unit), 
           stat = "identity", position = "dodge", alpha = .3) +
  geom_bar(data = real_y, 
           aes(x = jnt, y = value, fill = unit), 
           stat = "identity", position = "dodge", alpha = .8) +
  scale_fill_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8"))  +
  scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
  geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
  xlab("Costal joints") +
  ylab("Moment arms (m)") +
  theme_classic() +
  theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
        axis.text.y = element_text(size = 10),
        axis.text.x = element_text(size = 10),
        axis.title = element_text(size = 12))

p <- ggarrange(plot_x,
               plot_y,
               plot_z,
               ncol = 1, nrow =3,
               labels = c("A",
                          "B",
                          "C"),
               common.legend = TRUE, legend = "bottom")

ggsave(plot = p, dpi = 600, bg = "white", 
       filename = paste0("bird_", names(mus_bar_list[i]), ".png"), 
       device = "png", width = 22, heigh = 28, units = "cm")
}


# create scatter plots for individual muscle
#compute for del IE and del II
#del_IE
del_IE_max <- data.frame(
  IE_list$MIE_back_max_lpr23$time,
  IE_list$MIE_max_lpr23 + IE_list$MIE_back_max_lpr23
) 
del_IE_max <- subset(del_IE_max, select = -2)
colnames(del_IE_max) <- colnames(IE_list$MIE_max_lpr23)

del_IE_real <- data.frame(
  IE_list$MIE_back_real_lpr23$time,
  IE_list$MIE_real_lpr23 + IE_list$MIE_back_real_lpr23
) 
del_IE_real <- subset(del_IE_real, select = -2)
colnames(del_IE_real) <- colnames(IE_list$MIE_real_lpr23)
del_IE_point <- list(del_IE_max, del_IE_real)
names(del_IE_point) <- c("del_IE_max", "del_IE_real")

#del_II
del_II_max <- data.frame(
  II_list$MII_max_lpr23$time,
  II_list$MII_front_max_lpr23 + II_list$MII_max_lpr23
) 
del_II_max <- subset(del_II_max, select = -2)
colnames(del_II_max) <- colnames(II_list$MII_max_lpr23)

del_II_real <- data.frame(
  II_list$MII_real_lpr23$time,
  II_list$MII_front_real_lpr23 + II_list$MII_real_lpr23
) 
del_II_real <- subset(del_II_real, select = -2)
colnames(del_II_real) <- colnames(II_list$MII_real_lpr23)
del_II_point <- list(del_II_max, del_II_real)
names(del_II_point) <- c("del_II_max", "del_II_real")

#put point data in a list
mus_point_list <- list(LC_list, IE_list[-c(1,2)], APC_list, II_list[-c(1,2)], COT_list, 
                     SC_list, del_IE_point, del_II_point)
names(mus_point_list) <- c("LC_list", "IE_list", "APC_list", "II_list", "COT_list", 
                         "SC_list", "del_IE_point", "del_II_point")





#plot by muscles, polish is required to make them DRY
#LC
for(j in seq(from = 1, to = (length(LC_list)*0.5), by = 1)){
  max_um_temp <- data.frame(LC_list[[j]][c(1, 2:4)], LC_list[[j]][c(8:10)])
  colnames(max_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                         "u2 axial", "u2 abad", "u2 prore")
  max_um_temp$time <- (max_um_temp$time/6)
  max_ca_temp <- data.frame(LC_list[[j]][c(1, 5:7)], LC_list[[j]][c(11:13)])
  colnames(max_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                         "u2 axial", "u2 abad", "u2 prore")
  max_ca_temp$time <- (max_ca_temp$time/6)
  real_um_temp <- data.frame(LC_list[[(j + 5)]][c(1, 2:4)], LC_list[[(j + 5)]][c(8:10)])
  colnames(real_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore")
  real_um_temp$time <- (real_um_temp$time/6)
  real_ca_temp <- data.frame(LC_list[[(j + 5)]][c(1, 5:7)], LC_list[[(j + 5)]][c(11:13)])
  colnames(real_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore")
  real_ca_temp$time <- (real_ca_temp$time/6)
  
  max_xyz <- reshape2::melt(data.frame(LC_data[j, c(1:7)]), id.var = "jnt")
  max_xyz <- max_xyz %>% mutate(axis = if_else(str_detect(max_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(max_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(max_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(max_xyz[[2]], "_u1_"), "unit 1", "unit 2"))
  
  real_xyz <- reshape2::melt(data.frame(LC_data[j, c(1, (8:13))]), id.var = "jnt")
  real_xyz <- real_xyz %>% mutate(axis = if_else(str_detect(real_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(real_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(real_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(real_xyz[[2]], "_u1_"), "unit 1", "unit 2"))
  
  x_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  x_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))

    y_max <- ggplot() +
      geom_line(data = max_um_temp, 
                aes(x = time, y = `u1 abad`), colour =  "#340664",
                linewidth = 1.5, alpha = .4) +
      geom_line(data = max_um_temp, 
                aes(x = time, y = `u2 abad`), colour =  "#2F139E",
                linewidth = 1.5, alpha = .4) +
      geom_line(data = max_ca_temp, 
                aes(x = time, y = `u1 abad`), colour =  "#340664",
                linetype = "dotdash", linewidth = 1.5, alpha = .8) +
      geom_line(data = max_ca_temp, 
                aes(x = time, y = `u2 abad`), colour =  "#2F139E",
                linetype = "dotdash", linewidth = 1.5, alpha = .8) +
      scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
      geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
      geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
      scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
      scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
      xlab("Percentage of ventilatory cycle") +
      ylab("Moment arm (m)") +
      theme_classic() +
      theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
            axis.text = element_text(size = 5),
            axis.title = element_text(size = 9))
    
    
    y_real <- ggplot() +
      geom_line(data = real_um_temp, 
                aes(x = time, y = `u1 abad`), colour =  "#340664",
                linewidth = 1.5, alpha = .4) +
      geom_line(data = real_um_temp, 
                aes(x = time, y = `u2 abad`), colour =  "#2F139E",
                linewidth = 1.5, alpha = .4) +
      geom_line(data = real_ca_temp, 
                aes(x = time, y = `u1 abad`), colour =  "#340664",
                linetype = "dotdash", linewidth = 1.5, alpha = .8) +
      geom_line(data = real_ca_temp, 
                aes(x = time, y = `u2 abad`), colour =  "#2F139E",
                linetype = "dotdash", linewidth = 1.5, alpha = .8) +
      scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
      geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
      geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
      scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
      scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
      xlab("Percentage of ventilatory cycle") +
      ylab("Moment arm (m)") +
      theme_classic() +
      theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
            axis.text = element_text(size = 5),
            axis.title = element_text(size = 9))
 
    z_max <- ggplot() +
      geom_line(data = max_um_temp, 
                aes(x = time, y = `u1 prore`), colour =  "#041E42",
                linewidth = 1.5, alpha = .4) +
      geom_line(data = max_um_temp, 
                aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
                linewidth = 1.5, alpha = .4) +
      geom_line(data = max_ca_temp, 
                aes(x = time, y = `u1 prore`), colour =  "#041E42",
                linetype = "dotdash", linewidth = 1.5, alpha = .8) +
      geom_line(data = max_ca_temp, 
                aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
                linetype = "dotdash", linewidth = 1.5, alpha = .8) +
      scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8"))  +
      geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
      geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
      scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
      scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
      xlab("Percentage of ventilatory cycle") +
      ylab("Moment arm (m)") +
      theme_classic() +
      theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
            axis.text = element_text(size = 5),
            axis.title = element_text(size = 9))
    
    z_real <- ggplot() +
      geom_line(data = real_um_temp, 
                aes(x = time, y = `u1 prore`), colour =  "#041E42",
                linewidth = 1.5, alpha = .4) +
      geom_line(data = real_um_temp, 
                aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
                linewidth = 1.5, alpha = .4) +
      geom_line(data = real_ca_temp, 
                aes(x = time, y = `u1 prore`), colour =  "#041E42",
                linetype = "dotdash", linewidth = 1.5, alpha = .8) +
      geom_line(data = real_ca_temp, 
                aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
                linetype = "dotdash", linewidth = 1.5, alpha = .8) +
      scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8"))  +
      geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
      geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
      scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
      scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
      xlab("Percentage of ventilatory cycle") +
      ylab("Moment arm (m)") +
      theme_classic() +
      theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
            axis.text = element_text(size = 5),
            axis.title = element_text(size = 9))
    
    
    xyz_bar <- ggplot() +
      geom_bar(data = max_xyz, 
               aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
               stat = "identity", position = position_dodge2(preserve = "single"), alpha = .3) +
      geom_bar(data = real_xyz, 
               aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
               stat = "identity", position = position_dodge2(preserve = "single"), alpha = .6) +
      scale_fill_manual(name = "Muscle action", values = c("#2F139E", "#893101", "#041E42")) +
      scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
      geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
      xlab("Muscle units") +
      ylab("Moment arms (m)") +
      theme_classic() +
      theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
            axis.text.y = element_text(size = 5),
            axis.text.x = element_text(size = 5),
            axis.title = element_text(size = 9))
  
    p <- ggarrange(x_max, x_real, xyz_bar,
                   y_max, y_real, xyz_bar,
                   z_max, z_real, xyz_bar,
                   ncol = 3, nrow = 3,
                   labels = c("A", "B", "C",
                              "D", "E", "F",
                              "G", "H", "I"),
                   common.legend = TRUE, legend = "bottom")
    
    ggsave(plot = p, dpi = 600, bg = "white", 
           filename = paste0("LC_",  Rib_names[j], ".png"), 
           device = "png", width = 22, heigh = 28, units = "cm")}


#IE
#drop the back MIE
IE_clean_list <- IE_list[-c(1,2)]
for(j in seq(from = 1, to = (length(IE_clean_list)*0.5), by = 1)){
  max_um_temp <- data.frame(IE_clean_list[[j]][c(1, 2:4)],
                            IE_clean_list[[j]][c(8:10)],
                            IE_clean_list[[j]][c(14:16)],
                            IE_clean_list[[j]][c(20:22)],
                            IE_clean_list[[j]][c(26:28)])
  colnames(max_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore",
                             "u3 axial", "u3 abad", "u3 prore",
                             "u4 axial", "u4 abad", "u4 prore",
                             "u5 axial", "u5 abad", "u5 prore")
  max_um_temp$time <- (max_um_temp$time/6)
  max_ca_temp <- data.frame(IE_clean_list[[j]][c(1, 5:7)], 
                            IE_clean_list[[j]][c(11:13)],
                            IE_clean_list[[j]][c(17:19)],
                            IE_clean_list[[j]][c(23:25)],
                            IE_clean_list[[j]][c(29:31)])
  colnames(max_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore",
                             "u3 axial", "u3 abad", "u3 prore",
                             "u4 axial", "u4 abad", "u4 prore",
                             "u5 axial", "u5 abad", "u5 prore")
  max_ca_temp$time <- (max_ca_temp$time/6)
  
  real_um_temp <- data.frame(IE_clean_list[[j+5]][c(1, 2:4)],
                            IE_clean_list[[j+5]][c(8:10)],
                            IE_clean_list[[j+5]][c(14:16)],
                            IE_clean_list[[j+5]][c(20:22)],
                            IE_clean_list[[j+5]][c(26:28)])
  colnames(real_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore",
                             "u3 axial", "u3 abad", "u3 prore",
                             "u4 axial", "u4 abad", "u4 prore",
                             "u5 axial", "u5 abad", "u5 prore")
  real_um_temp$time <- (real_um_temp$time/6)
  
  real_ca_temp <- data.frame(IE_clean_list[[j+5]][c(1, 5:7)], 
                            IE_clean_list[[j+5]][c(11:13)],
                            IE_clean_list[[j+5]][c(17:19)],
                            IE_clean_list[[j+5]][c(23:25)],
                            IE_clean_list[[j+5]][c(29:31)])
  colnames(real_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore",
                             "u3 axial", "u3 abad", "u3 prore",
                             "u4 axial", "u4 abad", "u4 prore",
                             "u5 axial", "u5 abad", "u5 prore")
  real_ca_temp$time <- (real_ca_temp$time/6)
  
  max_xyz <- reshape2::melt(data.frame(IE_data[j, c(1:16)]), id.var = "jnt")
  max_xyz <- max_xyz %>% mutate(axis = if_else(str_detect(max_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(max_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(max_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(max_xyz[[2]], "_u1_"), "unit 1", 
                          ifelse(str_detect(max_xyz[[2]], "_u2_"), "unit 2",
                                 ifelse(str_detect(max_xyz[[2]], "_u3_"), "unit 3",
                                        ifelse(str_detect(max_xyz[[2]], "_u4_"), "unit 4", "unit 5")))))
  
  real_xyz <- reshape2::melt(data.frame(IE_data[j, c(1, (17:31))]), id.var = "jnt")
  real_xyz <- real_xyz %>% mutate(axis = if_else(str_detect(real_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(real_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(real_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(real_xyz[[2]], "_u1_"), "unit 1", 
                          ifelse(str_detect(real_xyz[[2]], "_u2_"), "unit 2",
                                 ifelse(str_detect(real_xyz[[2]], "_u3_"), "unit 3",
                                        ifelse(str_detect(real_xyz[[2]], "_u4_"), "unit 4", "unit 5")))))
  
  x_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))

  
  x_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))

  y_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linetype = "dotdash",linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  y_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
 
  z_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  z_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  xyz_bar <- ggplot() +
    geom_bar(data = max_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .3) +
    geom_bar(data = real_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .8) +
    scale_fill_manual(name = "Muscle action", values = c("#2F139E", "#893101", "#041E42")) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    xlab("Muscle actions") +
    ylab("Moment arms (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text.y = element_text(size = 5),
          axis.text.x = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  p <- ggarrange(x_max, x_real, xyz_bar,
                 y_max, y_real, xyz_bar,
                 z_max, z_real, xyz_bar,
                 ncol = 3, nrow = 3,
                 labels = c("A", "B", "C",
                            "D", "E", "F",
                            "G", "H", "I"),
                 common.legend = TRUE, legend = "bottom")
  
  ggsave(plot = p, dpi = 600, bg = "white", 
         filename = paste0("IE_",  Rib_names[j], ".png"), 
         device = "png", width = 22, heigh = 28, units = "cm")}


#APC
#drop the PMA
APC_clean_list <- APC_list[-c(5:8)]
for(j in seq(from = 1, to = (length(APC_clean_list)*0.5), by = 1)){
  max_um_temp <- data.frame(APC_clean_list[[j]][c(1, 2:4)], APC_clean_list[[j]][c(8:10)])
  colnames(max_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore")
  max_um_temp$time <- (max_um_temp$time/6)
  
  max_ca_temp <- data.frame(APC_clean_list[[j]][c(1, 5:7)], APC_clean_list[[j]][c(11:13)])
  colnames(max_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore")
  max_ca_temp$time <- (max_ca_temp$time/6)
  
  real_um_temp <- data.frame(APC_clean_list[[(j + 2)]][c(1, 2:4)], APC_clean_list[[(j + 2)]][c(8:10)])
  colnames(real_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                              "u2 axial", "u2 abad", "u2 prore")
  real_um_temp$time <- (real_um_temp$time/6)
  
  real_ca_temp <- data.frame(APC_clean_list[[(j + 2)]][c(1, 5:7)], APC_clean_list[[(j + 2)]][c(11:13)])
  colnames(real_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                              "u2 axial", "u2 abad", "u2 prore")
  real_ca_temp$time <- (real_ca_temp$time/6)
  
  max_xyz <- reshape2::melt(data.frame(APC_data[j, c(1:7)]), id.var = "jnt")
  max_xyz <- max_xyz %>% mutate(axis = if_else(str_detect(max_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(max_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(max_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(max_xyz[[2]], "_u1_"), "unit 1", "unit 2"))
  
  real_xyz <- reshape2::melt(data.frame(APC_data[j, c(1, (8:13))]), id.var = "jnt")
  real_xyz <- real_xyz %>% mutate(axis = if_else(str_detect(real_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(real_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(real_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(real_xyz[[2]], "_u1_"), "unit 1", "unit 2"))
  
  x_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  x_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  y_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  y_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  z_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  z_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  xyz_bar <- ggplot() +
    geom_bar(data = max_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .3) +
    geom_bar(data = real_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .6) +
    scale_fill_manual(name = "Muscle action", values = c("#2F139E", "#893101", "#041E42")) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    xlab("Muscle units") +
    ylab("Moment arms (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text.y = element_text(size = 5),
          axis.text.x = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  p <- ggarrange(x_max, x_real, xyz_bar,
                 y_max, y_real, xyz_bar,
                 z_max, z_real, xyz_bar,
                 ncol = 3, nrow = 3,
                 labels = c("A", "B", "C",
                            "D", "E", "F",
                            "G", "H", "I"),
                 common.legend = TRUE, legend = "bottom")
  
  ggsave(plot = p, dpi = 600, bg = "white", 
         filename = paste0("APC_clean",  Rib_names[j+2], ".png"), 
         device = "png", width = 22, heigh = 30, units = "cm")}


#II
#drop the front MII
II_clean_list <- II_list[-c(1,2)]
for(j in seq(from = 1, to = (length(II_clean_list)*0.5), by = 1)){
  max_um_temp <- data.frame(II_clean_list[[j]][c(1, 2:4)],
                            II_clean_list[[j]][c(8:10)],
                            II_clean_list[[j]][c(14:16)],
                            II_clean_list[[j]][c(20:22)],
                            II_clean_list[[j]][c(26:28)])
  colnames(max_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore",
                             "u3 axial", "u3 abad", "u3 prore",
                             "u4 axial", "u4 abad", "u4 prore",
                             "u5 axial", "u5 abad", "u5 prore")
  max_um_temp$time <- (max_um_temp$time/6)
  max_ca_temp <- data.frame(II_clean_list[[j]][c(1, 5:7)], 
                            II_clean_list[[j]][c(11:13)],
                            II_clean_list[[j]][c(17:19)],
                            II_clean_list[[j]][c(23:25)],
                            II_clean_list[[j]][c(29:31)])
  colnames(max_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore",
                             "u3 axial", "u3 abad", "u3 prore",
                             "u4 axial", "u4 abad", "u4 prore",
                             "u5 axial", "u5 abad", "u5 prore")
  max_ca_temp$time <- (max_ca_temp$time/6)
  
  real_um_temp <- data.frame(II_clean_list[[j+4]][c(1, 2:4)],
                             II_clean_list[[j+4]][c(8:10)],
                             II_clean_list[[j+4]][c(14:16)],
                             II_clean_list[[j+4]][c(20:22)],
                             II_clean_list[[j+4]][c(26:28)])
  colnames(real_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                              "u2 axial", "u2 abad", "u2 prore",
                              "u3 axial", "u3 abad", "u3 prore",
                              "u4 axial", "u4 abad", "u4 prore",
                              "u5 axial", "u5 abad", "u5 prore")
  real_um_temp$time <- (real_um_temp$time/6)
  
  real_ca_temp <- data.frame(II_clean_list[[j+4]][c(1, 5:7)], 
                             II_clean_list[[j+4]][c(11:13)],
                             II_clean_list[[j+4]][c(17:19)],
                             II_clean_list[[j+4]][c(23:25)],
                             II_clean_list[[j+4]][c(29:31)])
  colnames(real_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                              "u2 axial", "u2 abad", "u2 prore",
                              "u3 axial", "u3 abad", "u3 prore",
                              "u4 axial", "u4 abad", "u4 prore",
                              "u5 axial", "u5 abad", "u5 prore")
  real_ca_temp$time <- (real_ca_temp$time/6)
  
  max_xyz <- reshape2::melt(data.frame(II_data[j, c(1:16)]), id.var = "jnt")
  max_xyz <- max_xyz %>% mutate(axis = if_else(str_detect(max_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(max_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(max_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(max_xyz[[2]], "_u1_"), "unit 1", 
                          ifelse(str_detect(max_xyz[[2]], "_u2_"), "unit 2",
                                 ifelse(str_detect(max_xyz[[2]], "_u3_"), "unit 3",
                                        ifelse(str_detect(max_xyz[[2]], "_u4_"), "unit 4", "unit 5")))))
  
  real_xyz <- reshape2::melt(data.frame(II_data[j, c(1, (17:31))]), id.var = "jnt")
  real_xyz <- real_xyz %>% mutate(axis = if_else(str_detect(real_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(real_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(real_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(real_xyz[[2]], "_u1_"), "unit 1", 
                          ifelse(str_detect(real_xyz[[2]], "_u2_"), "unit 2",
                                 ifelse(str_detect(real_xyz[[2]], "_u3_"), "unit 3",
                                        ifelse(str_detect(real_xyz[[2]], "_u4_"), "unit 4", "unit 5")))))
  
  x_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  x_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  y_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linetype = "dotdash",linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  y_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  z_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  z_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  xyz_bar <- ggplot() +
    geom_bar(data = max_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .3) +
    geom_bar(data = real_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .8) +
    scale_fill_manual(name = "Muscle action", values = c("#2F139E", "#893101", "#041E42")) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    xlab("Muscle actions") +
    ylab("Moment arms (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text.y = element_text(size = 5),
          axis.text.x = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  p <- ggarrange(x_max, x_real, xyz_bar,
                 y_max, y_real, xyz_bar,
                 z_max, z_real, xyz_bar,
                 ncol = 3, nrow = 3,
                 labels = c("A", "B", "C",
                            "D", "E", "F",
                            "G", "H", "I"),
                 common.legend = TRUE, legend = "bottom")
  
  ggsave(plot = p, dpi = 600, bg = "white", 
         filename = paste0("II_",  Rib_names[j], ".png"), 
         device = "png", width = 22, heigh = 28, units = "cm")}


#COT
for(j in seq(from = 1, to = (length(COT_list)*0.5), by = 1)){
  max_um_temp <- data.frame(COT_list[[j]][c(1, 2:4)])
  colnames(max_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore")
  max_um_temp$time <- (max_um_temp$time/6)
  max_ca_temp <- data.frame(COT_list[[j]][c(1, 5:7)])
  colnames(max_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore")
  max_ca_temp$time <- (max_ca_temp$time/6)
  real_um_temp <- data.frame(COT_list[[(j + 3)]][c(1, 2:4)])
  colnames(real_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore")
  real_um_temp$time <- (real_um_temp$time/6)
  real_ca_temp <- data.frame(COT_list[[(j + 3)]][c(1, 5:7)])
  colnames(real_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore")
  real_ca_temp$time <- (real_ca_temp$time/6)
  
  max_xyz <- reshape2::melt(data.frame(COT_data[j, c(1:4)]), id.var = "jnt")
  max_xyz <- max_xyz %>% mutate(axis = if_else(str_detect(max_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(max_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(max_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = "unit 1")
  
  real_xyz <- reshape2::melt(data.frame(COT_data[j, c(1, (5:7))]), id.var = "jnt")
  real_xyz <- real_xyz %>% mutate(axis = if_else(str_detect(real_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(real_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(real_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = "unit 1")
  
  x_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  x_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  y_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  y_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  z_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  z_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  xyz_bar <- ggplot() +
    geom_bar(data = max_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .3) +
    geom_bar(data = real_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .6) +
    scale_fill_manual(name = "Muscle action", values = c("#2F139E", "#893101", "#041E42")) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    xlab("Muscle units") +
    ylab("Moment arms (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text.y = element_text(size = 5),
          axis.text.x = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  p <- ggarrange(x_max, x_real, xyz_bar,
                 y_max, y_real, xyz_bar,
                 z_max, z_real, xyz_bar,
                 ncol = 3, nrow = 3,
                 labels = c("A", "B", "C",
                            "D", "E", "F",
                            "G", "H", "I"),
                 common.legend = TRUE, legend = "bottom")
  
  ggsave(plot = p, dpi = 600, bg = "white", 
         filename = paste0("COT_",  Rib_names[j], ".png"), 
         device = "png", width = 22, heigh = 28, units = "cm")}


#SC
for(j in seq(from = 1, to = (length(SC_list)*0.5), by = 1)){
  max_um_temp <- data.frame(SC_list[[j]][c(1, 2:4)])
  colnames(max_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore")
  max_um_temp$time <- (max_um_temp$time/6)
  max_ca_temp <- data.frame(SC_list[[j]][c(1, 5:7)])
  colnames(max_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore")
  max_ca_temp$time <- (max_ca_temp$time/6)
  real_um_temp <- data.frame(SC_list[[(j + 5)]][c(1, 2:4)])
  colnames(real_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore")
  real_um_temp$time <- (real_um_temp$time/6)
  real_ca_temp <- data.frame(SC_list[[(j + 5)]][c(1, 5:7)])
  colnames(real_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore")
  real_ca_temp$time <- (real_ca_temp$time/6)
  
  max_xyz <- reshape2::melt(data.frame(SC_data[j, c(1:4)]), id.var = "jnt")
  max_xyz <- max_xyz %>% mutate(axis = if_else(str_detect(max_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(max_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(max_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = "unit 1")
  
  real_xyz <- reshape2::melt(data.frame(SC_data[j, c(1, (5:7))]), id.var = "jnt")
  real_xyz <- real_xyz %>% mutate(axis = if_else(str_detect(real_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(real_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(real_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = "unit 1")
  
  x_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  x_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  y_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  y_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  z_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  z_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8"))  +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  xyz_bar <- ggplot() +
    geom_bar(data = max_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .3) +
    geom_bar(data = real_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .6) +
    scale_fill_manual(name = "Muscle action", values = c("#2F139E", "#893101", "#041E42")) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    xlab("Muscle units") +
    ylab("Moment arms (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text.y = element_text(size = 5),
          axis.text.x = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  p <- ggarrange(x_max, x_real, xyz_bar,
                 y_max, y_real, xyz_bar,
                 z_max, z_real, xyz_bar,
                 ncol = 3, nrow = 3,
                 labels = c("A", "B", "C",
                            "D", "E", "F",
                            "G", "H", "I"),
                 common.legend = TRUE, legend = "bottom")
  
  ggsave(plot = p, dpi = 600, bg = "white", 
         filename = paste0("SC_",  Rib_names[j], ".png"), 
         device = "png", width = 22, heigh = 28, units = "cm")}


#del_IE
for(j in seq(from = 1, to = (length(del_IE_point)*0.5), by = 1)){
  max_um_temp <- data.frame(del_IE_point[[j]][c(1, 2:4)],
                            del_IE_point[[j]][c(8:10)],
                            del_IE_point[[j]][c(14:16)],
                            del_IE_point[[j]][c(20:22)],
                            del_IE_point[[j]][c(26:28)])
  colnames(max_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore",
                             "u3 axial", "u3 abad", "u3 prore",
                             "u4 axial", "u4 abad", "u4 prore",
                             "u5 axial", "u5 abad", "u5 prore")
  max_um_temp$time <- (max_um_temp$time/6)
  max_ca_temp <- data.frame(del_IE_point[[j]][c(1, 5:7)], 
                            del_IE_point[[j]][c(11:13)],
                            del_IE_point[[j]][c(17:19)],
                            del_IE_point[[j]][c(23:25)],
                            del_IE_point[[j]][c(29:31)])
  colnames(max_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore",
                             "u3 axial", "u3 abad", "u3 prore",
                             "u4 axial", "u4 abad", "u4 prore",
                             "u5 axial", "u5 abad", "u5 prore")
  max_ca_temp$time <- (max_ca_temp$time/6)
  
  real_um_temp <- data.frame(del_IE_point[[j+1]][c(1, 2:4)],
                             del_IE_point[[j+1]][c(8:10)],
                             del_IE_point[[j+1]][c(14:16)],
                             del_IE_point[[j+1]][c(20:22)],
                             del_IE_point[[j+1]][c(26:28)])
  colnames(real_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                              "u2 axial", "u2 abad", "u2 prore",
                              "u3 axial", "u3 abad", "u3 prore",
                              "u4 axial", "u4 abad", "u4 prore",
                              "u5 axial", "u5 abad", "u5 prore")
  real_um_temp$time <- (real_um_temp$time/6)
  
  real_ca_temp <- data.frame(del_IE_point[[j+1]][c(1, 5:7)], 
                             del_IE_point[[j+1]][c(11:13)],
                             del_IE_point[[j+1]][c(17:19)],
                             del_IE_point[[j+1]][c(23:25)],
                             del_IE_point[[j+1]][c(29:31)])
  colnames(real_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                              "u2 axial", "u2 abad", "u2 prore",
                              "u3 axial", "u3 abad", "u3 prore",
                              "u4 axial", "u4 abad", "u4 prore",
                              "u5 axial", "u5 abad", "u5 prore")
  real_ca_temp$time <- (real_ca_temp$time/6)
  
  max_xyz <- reshape2::melt(data.frame(del_IE_data[j, c(1:16)]), id.var = "jnt")
  max_xyz <- max_xyz %>% mutate(axis = if_else(str_detect(max_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(max_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(max_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(max_xyz[[2]], "_u1_"), "unit 1", 
                          ifelse(str_detect(max_xyz[[2]], "_u2_"), "unit 2",
                                 ifelse(str_detect(max_xyz[[2]], "_u3_"), "unit 3",
                                        ifelse(str_detect(max_xyz[[2]], "_u4_"), "unit 4", "unit 5")))))
  
  real_xyz <- reshape2::melt(data.frame(del_IE_data[j, c(1, (17:31))]), id.var = "jnt")
  real_xyz <- real_xyz %>% mutate(axis = if_else(str_detect(real_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(real_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(real_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(real_xyz[[2]], "_u1_"), "unit 1", 
                          ifelse(str_detect(real_xyz[[2]], "_u2_"), "unit 2",
                                 ifelse(str_detect(real_xyz[[2]], "_u3_"), "unit 3",
                                        ifelse(str_detect(real_xyz[[2]], "_u4_"), "unit 4", "unit 5")))))
  
  x_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  x_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  y_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linetype = "dotdash",linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  y_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  z_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  z_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  xyz_bar <- ggplot() +
    geom_bar(data = max_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .3) +
    geom_bar(data = real_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .8) +
    scale_fill_manual(name = "Muscle action", values = c("#2F139E", "#893101", "#041E42")) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    xlab("Muscle actions") +
    ylab("Moment arms (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text.y = element_text(size = 5),
          axis.text.x = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  p <- ggarrange(x_max, x_real, xyz_bar,
                 y_max, y_real, xyz_bar,
                 z_max, z_real, xyz_bar,
                 ncol = 3, nrow = 3,
                 labels = c("A", "B", "C",
                            "D", "E", "F",
                            "G", "H", "I"),
                 common.legend = TRUE, legend = "bottom")
  
  ggsave(plot = p, dpi = 600, bg = "white", 
         filename = paste0("del_IE_",  Rib_names[j+2], ".png"), 
         device = "png", width = 22, heigh = 28, units = "cm")}


#del_II
for(j in seq(from = 1, to = (length(del_II_point)*0.5), by = 1)){
  max_um_temp <- data.frame(del_II_point[[j]][c(1, 2:4)],
                            del_II_point[[j]][c(8:10)],
                            del_II_point[[j]][c(14:16)],
                            del_II_point[[j]][c(20:22)],
                            del_II_point[[j]][c(26:28)])
  colnames(max_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore",
                             "u3 axial", "u3 abad", "u3 prore",
                             "u4 axial", "u4 abad", "u4 prore",
                             "u5 axial", "u5 abad", "u5 prore")
  max_um_temp$time <- (max_um_temp$time/6)
  max_ca_temp <- data.frame(del_II_point[[j]][c(1, 5:7)], 
                            del_II_point[[j]][c(11:13)],
                            del_II_point[[j]][c(17:19)],
                            del_II_point[[j]][c(23:25)],
                            del_II_point[[j]][c(29:31)])
  colnames(max_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                             "u2 axial", "u2 abad", "u2 prore",
                             "u3 axial", "u3 abad", "u3 prore",
                             "u4 axial", "u4 abad", "u4 prore",
                             "u5 axial", "u5 abad", "u5 prore")
  max_ca_temp$time <- (max_ca_temp$time/6)
  
  real_um_temp <- data.frame(del_II_point[[j+1]][c(1, 2:4)],
                             del_II_point[[j+1]][c(8:10)],
                             del_II_point[[j+1]][c(14:16)],
                             del_II_point[[j+1]][c(20:22)],
                             del_II_point[[j+1]][c(26:28)])
  colnames(real_um_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                              "u2 axial", "u2 abad", "u2 prore",
                              "u3 axial", "u3 abad", "u3 prore",
                              "u4 axial", "u4 abad", "u4 prore",
                              "u5 axial", "u5 abad", "u5 prore")
  real_um_temp$time <- (real_um_temp$time/6)
  
  real_ca_temp <- data.frame(del_II_point[[j+1]][c(1, 5:7)], 
                             del_II_point[[j+1]][c(11:13)],
                             del_II_point[[j+1]][c(17:19)],
                             del_II_point[[j+1]][c(23:25)],
                             del_II_point[[j+1]][c(29:31)])
  colnames(real_ca_temp) <- c("time", "u1 axial", "u1 abad", "u1 prore",
                              "u2 axial", "u2 abad", "u2 prore",
                              "u3 axial", "u3 abad", "u3 prore",
                              "u4 axial", "u4 abad", "u4 prore",
                              "u5 axial", "u5 abad", "u5 prore")
  real_ca_temp$time <- (real_ca_temp$time/6)
  
  max_xyz <- reshape2::melt(data.frame(del_II_data[j, c(1:16)]), id.var = "jnt")
  max_xyz <- max_xyz %>% mutate(axis = if_else(str_detect(max_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(max_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(max_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(max_xyz[[2]], "_u1_"), "unit 1", 
                          ifelse(str_detect(max_xyz[[2]], "_u2_"), "unit 2",
                                 ifelse(str_detect(max_xyz[[2]], "_u3_"), "unit 3",
                                        ifelse(str_detect(max_xyz[[2]], "_u4_"), "unit 4", "unit 5")))))
  
  real_xyz <- reshape2::melt(data.frame(del_II_data[j, c(1, (17:31))]), id.var = "jnt")
  real_xyz <- real_xyz %>% mutate(axis = if_else(str_detect(real_xyz[[2]], "max_"), "max", "real")) %>%
    mutate(xyz = if_else(str_detect(real_xyz[[2]], "_x"), "axial_rotation", 
                         if_else(str_detect(real_xyz[[2]], "_y"), "abduct_adduct",
                                 "pro_retract"))) %>%
    mutate(unit = if_else(str_detect(real_xyz[[2]], "_u1_"), "unit 1", 
                          ifelse(str_detect(real_xyz[[2]], "_u2_"), "unit 2",
                                 ifelse(str_detect(real_xyz[[2]], "_u3_"), "unit 3",
                                        ifelse(str_detect(real_xyz[[2]], "_u4_"), "unit 4", "unit 5")))))
  
  x_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  x_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 axial`), colour =  "#893101",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 axial`), colour =  "#FCAE1E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 axial`), colour =  "#FF4C00",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 axial`), colour =  "#F5C77E",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 axial`), colour =  "#FFF689",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#893101", "#FCAE1E", "#FF4C00", "#F5C77E", "#FFF689")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  y_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linetype = "dotdash",linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  y_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 abad`), colour =  "#340664",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 abad`), colour =  "#2F139E",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 abad`), colour =  "#B100CD",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 abad`), colour =  "#896F95",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 abad`), colour =  "#E5CFFC",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#340664", "#2F139E", "#B100CD", "#896F95", "#E5CFFC")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  z_max <- ggplot() +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = max_um_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = max_ca_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  
  z_real <- ggplot() +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linewidth = 1.5, alpha = .4) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linewidth = 1.5, alpha = .6) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linewidth = 1.5, alpha = .8) +
    geom_line(data = real_um_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linewidth = 1.5, alpha = 1) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u1 prore`), colour =  "#041E42",
              linetype = "dotdash", linewidth = 1.5, alpha = .4) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u2 prore`), colour =  "#0E4C92",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u3 prore`), colour =  "#4682B4",
              linetype = "dotdash", linewidth = 1.5, alpha = .6) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u4 prore`), colour =  "#73C2FB",
              linetype = "dotdash", linewidth = 1.5, alpha = .8) +
    geom_line(data = real_ca_temp, 
              aes(x = time, y = `u5 prore`), colour =  "#95C8D8",
              linetype = "dotdash", linewidth = 1.5, alpha = 1) +
    scale_colour_manual(name = "Muscle units", values = c("#041E42", "#0E4C92", "#4682B4", "#73C2FB", "#95C8D8")) +
    geom_vline(xintercept = 0.333, linetype = "solid", color = "#AE9882", linewidth = 5, alpha = .3) + 
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    scale_x_continuous(labels = scales::percent_format(accuracy = 1),expand = c(0, 0), limits = c(NA, NA)) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    xlab("Percentage of ventilatory cycle") +
    ylab("Moment arm (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  xyz_bar <- ggplot() +
    geom_bar(data = max_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .3) +
    geom_bar(data = real_xyz, 
             aes(x = factor(xyz, levels = unique(xyz)), y = value, fill = xyz), 
             stat = "identity", position = position_dodge2(preserve = "single"), alpha = .8) +
    scale_fill_manual(name = "Muscle action", values = c("#2F139E", "#893101", "#041E42")) +
    scale_y_continuous(expand = c(0.2, 0), limits = c(NA, NA)) +
    geom_hline(yintercept = 0, linetype = "solid", color = "black", linewidth = 1) + 
    xlab("Muscle actions") +
    ylab("Moment arms (m)") +
    theme_classic() +
    theme(axis.line = element_line(colour = "black", linewidth = 0.5, linetype = "solid"), 
          axis.text.y = element_text(size = 5),
          axis.text.x = element_text(size = 5),
          axis.title = element_text(size = 9))
  
  p <- ggarrange(x_max, x_real, xyz_bar,
                 y_max, y_real, xyz_bar,
                 z_max, z_real, xyz_bar,
                 ncol = 3, nrow = 3,
                 labels = c("A", "B", "C",
                            "D", "E", "F",
                            "G", "H", "I"),
                 common.legend = TRUE, legend = "bottom")
  
  ggsave(plot = p, dpi = 600, bg = "white", 
         filename = paste0("del_II_",  Rib_names[j+2], ".png"), 
         device = "png", width = 22, heigh = 28, units = "cm")}


# compare signs of moment arms and the signs of oROM to infer muscle functions
# only use realistic version for now
oROM_real <- oROM[-c(1:2), c(6:8)]
t_oROM_real <- transpose(oROM_real)
colnames(t_oROM_real) <- oROM[c(3:12) ,1]

#predict for LC
#get values from max expiration
f0_LC <-rbindlist(LC_list[-c(1:(length(LC_list)*0.5))])
f0_LC <- filter(f0_LC, time == "0")
f0_LC <- select(f0_LC, matches("um"))
f0_LC <- transpose(f0_LC)
f0_LC <- cbind(f0_LC, t_oROM_real[, rep(c(1:5))])

colnames(f0_LC) <- c("C21", "C22", "C23", "C24", "C25",
                     "oROM21", "oROM22", "oROM23", "oROM24", "oROM25")
f0_LC <- f0_LC %>%
  mutate(Muscle = c("LC_u1_axis", "LC_u1_ab_ad", "LC_u1_pro_re", 
                    "LC_u2_axis", "LC_u2_ab_ad", "LC_u2_pro_re"),
         C21_vfun = ifelse(sign(f0_LC$C21) == sign(f0_LC$oROM21), "Ins", "Exp"),
         C22_vfun = ifelse(sign(f0_LC$C22) == sign(f0_LC$oROM21), "Ins", "Exp"),
         C23_vfun = ifelse(sign(f0_LC$C23) == sign(f0_LC$oROM23), "Ins", "Exp"),
         C24_vfun = ifelse(sign(f0_LC$C24) == sign(f0_LC$oROM24), "Ins", "Exp"),
         C25_vfun = ifelse(sign(f0_LC$C25) == sign(f0_LC$oROM25), "Ins", "Exp")
         )

#get values from max inspiration
f2_LC <-rbindlist(LC_list[-c(1:(length(LC_list)*0.5))])
f2_LC <- filter(f2_LC, time == "2")
f2_LC <- select(f2_LC, matches("um"))
f2_LC <- transpose(f2_LC)
f2_LC <- cbind(f2_LC, t_oROM_real[, rep(c(1:5))])

colnames(f2_LC) <- c("C21", "C22", "C23", "C24", "C25",
                     "oROM21", "oROM22", "oROM23", "oROM24", "oROM25")
f2_LC <- f2_LC %>%
  mutate(Muscle = c("LC_u1_axis", "LC_u1_ab_ad", "LC_u1_pro_re", 
                    "LC_u2_axis", "LC_u2_ab_ad", "LC_u2_pro_re"),
         C21_vfun = ifelse(sign(f2_LC$C21) == sign(f2_LC$oROM21), "Ins", "Exp"),
         C22_vfun = ifelse(sign(f2_LC$C22) == sign(f2_LC$oROM21), "Ins", "Exp"),
         C23_vfun = ifelse(sign(f2_LC$C23) == sign(f2_LC$oROM23), "Ins", "Exp"),
         C24_vfun = ifelse(sign(f2_LC$C24) == sign(f2_LC$oROM24), "Ins", "Exp"),
         C25_vfun = ifelse(sign(f2_LC$C25) == sign(f2_LC$oROM25), "Ins", "Exp")
  )

#create a consensus between the two
LC_fuc <- data.frame(
  muscle = rep("LC", nrow(f2_LC)),
  
  `muscle unit` = ifelse(str_detect(f2_LC$Muscle, "u1"), "unit 1", "unit 2"),
  
  `muscle action` = ifelse(str_detect(f2_LC$Muscle, "axis"), "axial rotation", 
                         ifelse(str_detect(f2_LC$Muscle, "ab_ad"), "abduction/adduction", 
                                "protraction/retraction")),
  
  C21_vfun = ifelse(!(f2_LC$C21_vfun == f0_LC$C21_vfun), "Mix",
                    ifelse(f2_LC$C21_vfun == "Ins", "Ins", "Exp")),
  
  C22_vfun = ifelse(!(f2_LC$C22_vfun == f0_LC$C22_vfun), "Mix",
                    ifelse(f2_LC$C22_vfun == "Ins", "Ins", "Exp")),
  
  C23_vfun = ifelse(!(f2_LC$C23_vfun == f0_LC$C23_vfun), "Mix",
                    ifelse(f2_LC$C23_vfun == "Ins", "Ins", "Exp")),
  
  C24_vfun = ifelse(!(f2_LC$C24_vfun == f0_LC$C24_vfun), "Mix",
                    ifelse(f2_LC$C24_vfun == "Ins", "Ins", "Exp")),
  
  C25_vfun = ifelse(!(f2_LC$C25_vfun == f0_LC$C25_vfun), "Mix",
                    ifelse(f2_LC$C25_vfun == "Ins", "Ins", "Exp")))


#predict for IE
#get values from max expiration
f0_IE <-rbindlist(IE_clean_list[-c(1:(length(IE_clean_list)*0.5))])
f0_IE <- filter(f0_IE, time == "0")
f0_IE <- select(f0_IE, matches("um"))
f0_IE <- transpose(f0_IE)
f0_IE <- cbind(f0_IE, t_oROM_real[, rep(c(1:5))])

colnames(f0_IE) <- c("C21", "C22", "C23", "C24", "C25",
                     "oROM21", "oROM22", "oROM23", "oROM24", "oROM25")
f0_IE <- f0_IE %>%
  mutate(Muscle = c("IE_u1_axis", "IE_u1_ab_ad", "IE_u1_pro_re", 
                    "IE_u2_axis", "IE_u2_ab_ad", "IE_u2_pro_re",
                    "IE_u3_axis", "IE_u3_ab_ad", "IE_u3_pro_re",
                    "IE_u4_axis", "IE_u4_ab_ad", "IE_u4_pro_re",
                    "IE_u5_axis", "IE_u5_ab_ad", "IE_u5_pro_re"),
         C21_vfun = ifelse(sign(f0_IE$C21) == sign(f0_IE$oROM21), "Ins", "Exp"),
         C22_vfun = ifelse(sign(f0_IE$C22) == sign(f0_IE$oROM21), "Ins", "Exp"),
         C23_vfun = ifelse(sign(f0_IE$C23) == sign(f0_IE$oROM23), "Ins", "Exp"),
         C24_vfun = ifelse(sign(f0_IE$C24) == sign(f0_IE$oROM24), "Ins", "Exp"),
         C25_vfun = ifelse(sign(f0_IE$C25) == sign(f0_IE$oROM25), "Ins", "Exp")
  )

#get values from max inspiration
f2_IE <-rbindlist(IE_clean_list[-c(1:(length(IE_clean_list)*0.5))])
f2_IE <- filter(f2_IE, time == "2")
f2_IE <- select(f2_IE, matches("um"))
f2_IE <- transpose(f2_IE)
f2_IE <- cbind(f2_IE, t_oROM_real[, rep(c(1:5))])

colnames(f2_IE) <- c("C21", "C22", "C23", "C24", "C25",
                     "oROM21", "oROM22", "oROM23", "oROM24", "oROM25")
f2_IE <- f2_IE %>%
  mutate(Muscle = c("IE_u1_axis", "IE_u1_ab_ad", "IE_u1_pro_re", 
                    "IE_u2_axis", "IE_u2_ab_ad", "IE_u2_pro_re",
                    "IE_u3_axis", "IE_u3_ab_ad", "IE_u3_pro_re",
                    "IE_u4_axis", "IE_u4_ab_ad", "IE_u4_pro_re",
                    "IE_u5_axis", "IE_u5_ab_ad", "IE_u5_pro_re"),
         C21_vfun = ifelse(sign(f2_IE$C21) == sign(f2_IE$oROM21), "Ins", "Exp"),
         C22_vfun = ifelse(sign(f2_IE$C22) == sign(f2_IE$oROM21), "Ins", "Exp"),
         C23_vfun = ifelse(sign(f2_IE$C23) == sign(f2_IE$oROM23), "Ins", "Exp"),
         C24_vfun = ifelse(sign(f2_IE$C24) == sign(f2_IE$oROM24), "Ins", "Exp"),
         C25_vfun = ifelse(sign(f2_IE$C25) == sign(f2_IE$oROM25), "Ins", "Exp")
  )

#create a consensus between the two
IE_fuc <- data.frame(
  muscle = rep("IE", nrow(f2_IE)),
  
  `muscle unit` = ifelse(str_detect(f2_IE$Muscle, "u1"), "unit 1", 
                         ifelse(str_detect(f2_IE$Muscle, "u2"), "unit 2",
                                ifelse(str_detect(f2_IE$Muscle, "u3"), "unit 3",
                                       ifelse(str_detect(f2_IE$Muscle, "u4"), "unit 4", "unit 5")))),
  
  `muscle action` = ifelse(str_detect(f2_IE$Muscle, "axis"), "axial rotation", 
                           ifelse(str_detect(f2_IE$Muscle, "ab_ad"), "abduction/adduction", 
                                  "protraction/retraction")),
  
  C21_vfun = ifelse(!(f2_IE$C21_vfun == f0_IE$C21_vfun), "Mix",
                    ifelse(f2_IE$C21_vfun == "Ins", "Ins", "Exp")),
  
  C22_vfun = ifelse(!(f2_IE$C22_vfun == f0_IE$C22_vfun), "Mix",
                    ifelse(f2_IE$C22_vfun == "Ins", "Ins", "Exp")),
  
  C23_vfun = ifelse(!(f2_IE$C23_vfun == f0_IE$C23_vfun), "Mix",
                    ifelse(f2_IE$C23_vfun == "Ins", "Ins", "Exp")),
  
  C24_vfun = ifelse(!(f2_IE$C24_vfun == f0_IE$C24_vfun), "Mix",
                    ifelse(f2_IE$C24_vfun == "Ins", "Ins", "Exp")),
  
  C25_vfun = ifelse(!(f2_IE$C25_vfun == f0_IE$C25_vfun), "Mix",
                    ifelse(f2_IE$C25_vfun == "Ins", "Ins", "Exp")))

#predict for APC
#get values from max expiration
f0_APC <-rbindlist(APC_clean_list[c(3:4)])
f0_APC <- filter(f0_APC, time == "0")
f0_APC <- select(f0_APC, matches("um"))
f0_APC <- transpose(f0_APC)
f0_APC <- cbind(f0_APC, t_oROM_real[, c(3:4)])

colnames(f0_APC) <- c("C23", "C24", "oROM23", "oROM24")
f0_APC <- f0_APC %>%
  mutate(Muscle = c("APC_u1_axis", "APC_u1_ab_ad", "APC_u1_pro_re", 
                    "APC_u2_axis", "APC_u2_ab_ad", "APC_u2_pro_re"),
         C23_vfun = ifelse(sign(f0_APC$C23) == sign(f0_APC$oROM23), "Ins", "Exp"),
         C24_vfun = ifelse(sign(f0_APC$C24) == sign(f0_APC$oROM24), "Ins", "Exp")
  )

#get values from max inspiration
f2_APC <-rbindlist(APC_clean_list[c(3:4)])
f2_APC <- filter(f2_APC, time == "2")
f2_APC <- select(f2_APC, matches("um"))
f2_APC <- transpose(f2_APC)
f2_APC <- cbind(f2_APC, t_oROM_real[, c(3:4)])

colnames(f2_APC) <- c("C23", "C24",
                     "oROM23", "oROM24")
f2_APC <- f2_APC %>%
  mutate(Muscle = c("APC_u1_axis", "APC_u1_ab_ad", "APC_u1_pro_re", 
                    "APC_u2_axis", "APC_u2_ab_ad", "APC_u2_pro_re"),
         C23_vfun = ifelse(sign(f2_APC$C23) == sign(f2_APC$oROM23), "Ins", "Exp"),
         C24_vfun = ifelse(sign(f2_APC$C24) == sign(f2_APC$oROM24), "Ins", "Exp")
  )

#create a consensus between the two
APC_fuc <- data.frame(
  muscle = rep("APC", nrow(f2_APC)),
  
  `muscle unit` = ifelse(str_detect(f2_APC$Muscle, "u1"), "unit 1", "unit 2"),
  
  `muscle action` = ifelse(str_detect(f2_APC$Muscle, "axis"), "axial rotation", 
                           ifelse(str_detect(f2_APC$Muscle, "ab_ad"), "abduction/adduction", 
                                  "protraction/retraction")),
  
  C23_vfun = ifelse(!(f2_APC$C23_vfun == f0_APC$C23_vfun), "Mix",
                    ifelse(f2_APC$C23_vfun == "Ins", "Ins", "Exp")),
  
  C24_vfun = ifelse(!(f2_APC$C24_vfun == f0_APC$C24_vfun), "Mix",
                    ifelse(f2_APC$C24_vfun == "Ins", "Ins", "Exp")))

#predict for II
#get values from max expiration
f0_II <-rbindlist(II_clean_list[-c(1:(length(II_clean_list)*0.5))])
f0_II <- filter(f0_II, time == "0")
f0_II <- select(f0_II, matches("um"))
f0_II <- transpose(f0_II)
f0_II <- cbind(f0_II, t_oROM_real[, rep(c(1:4))])

colnames(f0_II) <- c("C21", "C22", "C23", "C24",
                     "oROM21", "oROM22", "oROM23", "oROM24")
f0_II <- f0_II %>%
  mutate(Muscle = c("II_u1_axis", "II_u1_ab_ad", "II_u1_pro_re", 
                    "II_u2_axis", "II_u2_ab_ad", "II_u2_pro_re",
                    "II_u3_axis", "II_u3_ab_ad", "II_u3_pro_re",
                    "II_u4_axis", "II_u4_ab_ad", "II_u4_pro_re",
                    "II_u5_axis", "II_u5_ab_ad", "II_u5_pro_re"),
         C21_vfun = ifelse(sign(f0_II$C21) == sign(f0_II$oROM21), "Ins", "Exp"),
         C22_vfun = ifelse(sign(f0_II$C22) == sign(f0_II$oROM21), "Ins", "Exp"),
         C23_vfun = ifelse(sign(f0_II$C23) == sign(f0_II$oROM23), "Ins", "Exp"),
         C24_vfun = ifelse(sign(f0_II$C24) == sign(f0_II$oROM24), "Ins", "Exp")
  )

#get values from max inspiration
f2_II <-rbindlist(II_clean_list[-c(1:(length(II_clean_list)*0.5))])
f2_II <- filter(f2_II, time == "2")
f2_II <- select(f2_II, matches("um"))
f2_II <- transpose(f2_II)
f2_II <- cbind(f2_II, t_oROM_real[, rep(c(1:4))])

colnames(f2_II) <- c("C21", "C22", "C23", "C24",
                     "oROM21", "oROM22", "oROM23", "oROM24")
f2_II <- f2_II %>%
  mutate(Muscle = c("II_u1_axis", "II_u1_ab_ad", "II_u1_pro_re", 
                    "II_u2_axis", "II_u2_ab_ad", "II_u2_pro_re",
                    "II_u3_axis", "II_u3_ab_ad", "II_u3_pro_re",
                    "II_u4_axis", "II_u4_ab_ad", "II_u4_pro_re",
                    "II_u5_axis", "II_u5_ab_ad", "II_u5_pro_re"),
         C21_vfun = ifelse(sign(f2_II$C21) == sign(f2_II$oROM21), "Ins", "Exp"),
         C22_vfun = ifelse(sign(f2_II$C22) == sign(f2_II$oROM21), "Ins", "Exp"),
         C23_vfun = ifelse(sign(f2_II$C23) == sign(f2_II$oROM23), "Ins", "Exp"),
         C24_vfun = ifelse(sign(f2_II$C24) == sign(f2_II$oROM24), "Ins", "Exp")
  )

#create a consensus between the two
II_fuc <- data.frame(
  muscle = rep("II", nrow(f2_II)),
  
  `muscle unit` = ifelse(str_detect(f2_IE$Muscle, "u1"), "unit 1", 
                         ifelse(str_detect(f2_IE$Muscle, "u2"), "unit 2",
                                ifelse(str_detect(f2_IE$Muscle, "u3"), "unit 3",
                                       ifelse(str_detect(f2_IE$Muscle, "u4"), "unit 4", "unit 5")))),
  
  `muscle action` = ifelse(str_detect(f2_II$Muscle, "axis"), "axial rotation", 
                           ifelse(str_detect(f2_II$Muscle, "ab_ad"), "abduction/adduction", 
                                  "protraction/retraction")),
  
  C21_vfun = ifelse(!(f2_II$C21_vfun == f0_II$C21_vfun), "Mix",
                    ifelse(f2_II$C21_vfun == "Ins", "Ins", "Exp")),
  
  C22_vfun = ifelse(!(f2_II$C22_vfun == f0_II$C22_vfun), "Mix",
                    ifelse(f2_II$C22_vfun == "Ins", "Ins", "Exp")),
  
  C23_vfun = ifelse(!(f2_II$C23_vfun == f0_II$C23_vfun), "Mix",
                    ifelse(f2_II$C23_vfun == "Ins", "Ins", "Exp")),
  
  C24_vfun = ifelse(!(f2_II$C24_vfun == f0_II$C24_vfun), "Mix",
                    ifelse(f2_II$C24_vfun == "Ins", "Ins", "Exp")))


#predict for COT
#get values from max expiration
f0_COT <- rbindlist(COT_list[-c(1:(length(COT_list)*0.5))])
f0_COT <- filter(f0_COT, time == "0")
f0_COT <- select(f0_COT, matches("um"))
f0_COT <- transpose(f0_COT)
f0_COT <- cbind(f0_COT, t_oROM_real[, c(6:8)])

colnames(f0_COT) <- c("IR21", "IR22", "IR23", 
                      "oROM21","oROM22", "oROM23")
f0_COT <- f0_COT %>%
  mutate(Muscle = c("COT_u1_axis", "COT_u1_ab_ad", "COT_u1_pro_re"),
         IR21_vfun = ifelse(sign(f0_COT$IR21) == sign(f0_COT$oROM21), "Ins", "Exp"),
         IR22_vfun = ifelse(sign(f0_COT$IR22) == sign(f0_COT$oROM22), "Ins", "Exp"),
         IR23_vfun = ifelse(sign(f0_COT$IR23) == sign(f0_COT$oROM23), "Ins", "Exp")
  )

#get values from max inspiration
f2_COT <- rbindlist(COT_list[-c(1:(length(COT_list)*0.5))])
f2_COT <- filter(f2_COT, time == "2")
f2_COT <- select(f2_COT, matches("um"))
f2_COT <- transpose(f2_COT)
f2_COT <- cbind(f2_COT, t_oROM_real[, c(6:8)])

colnames(f2_COT) <- c("IR21", "IR22", "IR23", 
                      "oROM21","oROM22", "oROM23")
f2_COT <- f2_COT %>%
  mutate(Muscle = c("COT_u1_axis", "COT_u1_ab_ad", "COT_u1_pro_re"),
         IR21_vfun = ifelse(sign(f0_COT$IR21) == sign(f0_COT$oROM21), "Ins", "Exp"),
         IR22_vfun = ifelse(sign(f0_COT$IR22) == sign(f0_COT$oROM22), "Ins", "Exp"),
         IR23_vfun = ifelse(sign(f0_COT$IR23) == sign(f0_COT$oROM23), "Ins", "Exp")
  )

#create a consensus between the two
COT_fuc <- data.frame(
  muscle = rep("COT", nrow(f2_COT)),
  
  `muscle unit` = ifelse(str_detect(f2_COT$Muscle, "u1"), "unit 1", "unit 2"),
  
  `muscle action` = ifelse(str_detect(f2_COT$Muscle, "axis"), "axial rotation", 
                           ifelse(str_detect(f2_COT$Muscle, "ab_ad"), "abduction/adduction", 
                                  "protraction/retraction")),
  
  IR21_vfun = ifelse(!(f2_COT$IR21_vfun == f0_COT$IR21_vfun), "Mix",
                    ifelse(f2_COT$IR21_vfun == "Ins", "Ins", "Exp")),
  
  IR22_vfun = ifelse(!(f2_COT$IR22_vfun == f0_COT$IR22_vfun), "Mix",
                     ifelse(f2_COT$IR22_vfun == "Ins", "Ins", "Exp")),
  
  IR23_vfun = ifelse(!(f2_COT$IR23_vfun == f0_COT$IR23_vfun), "Mix",
                     ifelse(f2_COT$IR23_vfun == "Ins", "Ins", "Exp"))
  )


#predict for SC
#get values from max expiration
f0_SC <- rbindlist(SC_list[-c(1:(length(SC_list)*0.5))])
f0_SC <- filter(f0_SC, time == "0")
f0_SC <- select(f0_SC, matches("um"))
f0_SC <- transpose(f0_SC)
f0_SC <- cbind(f0_SC, t_oROM_real[, c(6:10)])

colnames(f0_SC) <- c("IR21", "IR22", "IR23", "IR24", "IR25", 
                      "oROM21","oROM22", "oROM23", "oROM24", "oROM25")
f0_SC <- f0_SC %>%
  mutate(Muscle = c("SC_u1_axis", "SC_u1_ab_ad", "SC_u1_pro_re"),
         IR21_vfun = ifelse(sign(f0_SC$IR21) == sign(f0_SC$oROM21), "Ins", "Exp"),
         IR22_vfun = ifelse(sign(f0_SC$IR22) == sign(f0_SC$oROM22), "Ins", "Exp"),
         IR23_vfun = ifelse(sign(f0_SC$IR23) == sign(f0_SC$oROM23), "Ins", "Exp"),
         IR24_vfun = ifelse(sign(f0_SC$IR24) == sign(f0_SC$oROM24), "Ins", "Exp"),
         IR25_vfun = ifelse(sign(f0_SC$IR25) == sign(f0_SC$oROM25), "Ins", "Exp")
  )

#get values from max inspiration
f2_SC <- rbindlist(SC_list[-c(1:(length(SC_list)*0.5))])
f2_SC <- filter(f2_SC, time == "2")
f2_SC <- select(f2_SC, matches("um"))
f2_SC <- transpose(f2_SC)
f2_SC <- cbind(f2_SC, t_oROM_real[, c(6:10)])

colnames(f2_SC) <- c("IR21", "IR22", "IR23", "IR24", "IR25", 
                     "oROM21","oROM22", "oROM23", "oROM24", "oROM25")
f2_SC <- f2_SC %>%
  mutate(Muscle = c("SC_u1_axis", "SC_u1_ab_ad", "SC_u1_pro_re"),
         IR21_vfun = ifelse(sign(f0_SC$IR21) == sign(f0_SC$oROM21), "Ins", "Exp"),
         IR22_vfun = ifelse(sign(f0_SC$IR22) == sign(f0_SC$oROM22), "Ins", "Exp"),
         IR23_vfun = ifelse(sign(f0_SC$IR23) == sign(f0_SC$oROM23), "Ins", "Exp"),
         IR24_vfun = ifelse(sign(f0_SC$IR24) == sign(f0_SC$oROM24), "Ins", "Exp"),
         IR25_vfun = ifelse(sign(f0_SC$IR25) == sign(f0_SC$oROM25), "Ins", "Exp")
  )

#create a consensus between the two
SC_fuc <- data.frame(
  muscle = rep("SC", nrow(f2_SC)),
  
  `muscle unit` = ifelse(str_detect(f2_SC$Muscle, "u1"), "unit 1", "unit 2"),
  
  `muscle action` = ifelse(str_detect(f2_SC$Muscle, "axis"), "axial rotation", 
                           ifelse(str_detect(f2_SC$Muscle, "ab_ad"), "abduction/adduction", 
                                  "protraction/retraction")),
  
  IR21_vfun = ifelse(!(f2_SC$IR21_vfun == f0_SC$IR21_vfun), "Mix",
                     ifelse(f2_SC$IR21_vfun == "Ins", "Ins", "Exp")),
  
  IR22_vfun = ifelse(!(f2_SC$IR22_vfun == f0_SC$IR22_vfun), "Mix",
                     ifelse(f2_SC$IR22_vfun == "Ins", "Ins", "Exp")),
  
  IR23_vfun = ifelse(!(f2_SC$IR23_vfun == f0_SC$IR23_vfun), "Mix",
                     ifelse(f2_SC$IR23_vfun == "Ins", "Ins", "Exp")),
  
  IR24_vfun = ifelse(!(f2_SC$IR24_vfun == f0_SC$IR24_vfun), "Mix",
                     ifelse(f2_SC$IR24_vfun == "Ins", "Ins", "Exp")),
  
  IR25_vfun = ifelse(!(f2_SC$IR25_vfun == f0_SC$IR25_vfun), "Mix",
                     ifelse(f2_SC$IR25_vfun == "Ins", "Ins", "Exp"))
)


#predict for del_IE
#get values from max expiration
f0_del_IE <-rbindlist(del_IE_point[-c(1:(length(del_IE_point)*0.5))])
f0_del_IE <- filter(f0_del_IE, time == "0")
f0_del_IE <- select(f0_del_IE, matches("um"))
f0_del_IE <- transpose(f0_del_IE)
f0_del_IE <- cbind(f0_del_IE, t_oROM_real[, 3])

colnames(f0_del_IE) <- c("C23", 
                     "oROM23")
f0_del_IE <- f0_del_IE %>%
  mutate(Muscle = c("del_IE_u1_axis", "del_IE_u1_ab_ad", "del_IE_u1_pro_re", 
                    "del_IE_u2_axis", "del_IE_u2_ab_ad", "del_IE_u2_pro_re",
                    "del_IE_u3_axis", "del_IE_u3_ab_ad", "del_IE_u3_pro_re",
                    "del_IE_u4_axis", "del_IE_u4_ab_ad", "del_IE_u4_pro_re",
                    "del_IE_u5_axis", "del_IE_u5_ab_ad", "del_IE_u5_pro_re"),
         C23_vfun = ifelse(sign(f0_del_IE$C23) == sign(f0_del_IE$oROM23), "Ins", "Exp")
  )

#get values from max inspiration
f2_del_IE <-rbindlist(del_IE_point[-c(1:(length(del_IE_point)*0.5))])
f2_del_IE <- filter(f2_del_IE, time == "2")
f2_del_IE <- select(f2_del_IE, matches("um"))
f2_del_IE <- transpose(f2_del_IE)
f2_del_IE <- cbind(f2_del_IE, t_oROM_real[, 3])

colnames(f2_del_IE) <-  c("C23", 
                          "oROM23")
f2_del_IE <- f2_del_IE %>%
  mutate(Muscle = c("del_IE_u1_axis", "del_IE_u1_ab_ad", "del_IE_u1_pro_re", 
                    "del_IE_u2_axis", "del_IE_u2_ab_ad", "del_IE_u2_pro_re",
                    "del_IE_u3_axis", "del_IE_u3_ab_ad", "del_IE_u3_pro_re",
                    "del_IE_u4_axis", "del_IE_u4_ab_ad", "del_IE_u4_pro_re",
                    "del_IE_u5_axis", "del_IE_u5_ab_ad", "del_IE_u5_pro_re"),
         C23_vfun = ifelse(sign(f2_del_IE$C23) == sign(f2_del_IE$oROM23), "Ins", "Exp")
  )

#create a consensus between the two
del_IE_fuc <- data.frame(
  muscle = rep("del_IE", nrow(f2_del_IE)),
  
  `muscle unit` = ifelse(str_detect(f2_del_IE$Muscle, "u1"), "unit 1", 
                         ifelse(str_detect(f2_del_IE$Muscle, "u2"), "unit 2",
                                ifelse(str_detect(f2_del_IE$Muscle, "u3"), "unit 3",
                                       ifelse(str_detect(f2_del_IE$Muscle, "u4"), "unit 4", "unit 5")))),
  
  `muscle action` = ifelse(str_detect(f2_del_IE$Muscle, "axis"), "axial rotation", 
                           ifelse(str_detect(f2_del_IE$Muscle, "ab_ad"), "abduction/adduction", 
                                  "protraction/retraction")),
  
  C23_vfun = ifelse(!(f2_del_IE$C23_vfun == f0_del_IE$C23_vfun), "Mix",
                    ifelse(f2_del_IE$C23_vfun == "Ins", "Ins", "Exp")))






#predict for del_II
#get values from max expiration
f0_del_II <-rbindlist(del_II_point[-c(1:(length(del_II_point)*0.5))])
f0_del_II <- filter(f0_del_II, time == "0")
f0_del_II <- select(f0_del_II, matches("um"))
f0_del_II <- transpose(f0_del_II)
f0_del_II <- cbind(f0_del_II, t_oROM_real[, 3])

colnames(f0_del_II) <- c("C23", 
                         "oROM23")
f0_del_II <- f0_del_II %>%
  mutate(Muscle = c("del_II_u1_axis", "del_II_u1_ab_ad", "del_II_u1_pro_re", 
                    "del_II_u2_axis", "del_II_u2_ab_ad", "del_II_u2_pro_re",
                    "del_II_u3_axis", "del_II_u3_ab_ad", "del_II_u3_pro_re",
                    "del_II_u4_axis", "del_II_u4_ab_ad", "del_II_u4_pro_re",
                    "del_II_u5_axis", "del_II_u5_ab_ad", "del_II_u5_pro_re"),
         C23_vfun = ifelse(sign(f0_del_II$C23) == sign(f0_del_II$oROM23), "Ins", "Exp")
  )

#get values from max inspiration
f2_del_II <-rbindlist(del_II_point[-c(1:(length(del_II_point)*0.5))])
f2_del_II <- filter(f2_del_II, time == "2")
f2_del_II <- select(f2_del_II, matches("um"))
f2_del_II <- transpose(f2_del_II)
f2_del_II <- cbind(f2_del_II, t_oROM_real[, 3])

colnames(f2_del_II) <-  c("C23", 
                          "oROM23")
f2_del_II <- f2_del_II %>%
  mutate(Muscle = c("del_II_u1_axis", "del_II_u1_ab_ad", "del_II_u1_pro_re", 
                    "del_II_u2_axis", "del_II_u2_ab_ad", "del_II_u2_pro_re",
                    "del_II_u3_axis", "del_II_u3_ab_ad", "del_II_u3_pro_re",
                    "del_II_u4_axis", "del_II_u4_ab_ad", "del_II_u4_pro_re",
                    "del_II_u5_axis", "del_II_u5_ab_ad", "del_II_u5_pro_re"),
         C23_vfun = ifelse(sign(f2_del_II$C23) == sign(f2_del_II$oROM23), "Ins", "Exp")
  )

#create a consensus between the two
del_II_fuc <- data.frame(
  muscle = rep("del_II", nrow(f2_del_II)),
  
  `muscle unit` = ifelse(str_detect(f2_del_II$Muscle, "u1"), "unit 1", 
                         ifelse(str_detect(f2_del_II$Muscle, "u2"), "unit 2",
                                ifelse(str_detect(f2_del_II$Muscle, "u3"), "unit 3",
                                       ifelse(str_detect(f2_del_II$Muscle, "u4"), "unit 4", "unit 5")))),
  
  `muscle action` = ifelse(str_detect(f2_del_II$Muscle, "axis"), "axial rotation", 
                           ifelse(str_detect(f2_del_II$Muscle, "ab_ad"), "abduction/adduction", 
                                  "protraction/retraction")),
  
  C23_vfun = ifelse(!(f2_del_II$C23_vfun == f0_del_II$C23_vfun), "Mix",
                    ifelse(f2_del_II$C23_vfun == "Ins", "Ins", "Exp")))


#compile all predictions into a table for supplementary information
mus_vr_fuc <- bind_rows(LC_fuc, IE_fuc, APC_fuc, II_fuc, del_IE_fuc, del_II_fuc)
mus_vr_fuc[is.na(mus_vr_fuc)] <- "-"
mus_sr_fuc <- bind_rows(COT_fuc, SC_fuc)
mus_sr_fuc[is.na(mus_sr_fuc)] <- "-"
write.csv(mus_vr_fuc, "bird_vr_muscle_unit_function.csv", row.names = FALSE)
write.csv(mus_sr_fuc, "bird_sr_muscle_unit_function.csv", row.names = FALSE)
